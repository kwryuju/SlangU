#pragma use_dxc

#pragma kernel imageMain

#pragma pack_matrix(column_major)
#ifdef SLANG_HLSL_ENABLE_NVAPI
#include "nvHLSLExtns.h"
#endif

#ifndef __DXC_VERSION_MAJOR
    // warning X3557: loop doesn't seem to do anything, forcing loop to unroll
    #pragma warning(disable: 3557)
#endif


// #line 18 "D:/Programs/SlangU/Assets/Shaders/ocean.slang"
RWTexture2D<float4 > result_0 : register(u0);


// #line 12089 "hlsl.meta.slang"
// struct GlobalParams_0
// {
    float4 U_ScreenSize_0;
    float4 _Time_0;
    float4 _MousePosition_0;
// };


// #line 12089
// cbuffer globalParams_0 : register(b0)
// {
//     GlobalParams_0 globalParams_0;
// }

// #line 11107
struct DiffPair_float_0
{
    float primal_0;
    float differential_0;
};


// #line 1 "token paste"
void _d_sqrt_0(inout DiffPair_float_0 dpx_0, float dOut_0)
{

// #line 1
    float _S1 = 0.5 / sqrt(max(1.00000001168609742e-07, dpx_0.primal_0)) * dOut_0;

// #line 1
    dpx_0.primal_0 = dpx_0.primal_0;

// #line 1
    dpx_0.differential_0 = _S1;

// #line 1708 "diff.meta.slang"
    return;
}


// #line 1708
struct DiffPair_vectorx3Cfloatx2C2x3E_0
{
    float2 primal_0;
    float2 differential_0;
};


// #line 1428
void _d_dot_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpx_1, inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpy_0, float dOut_1)
{
    float2 x_d_result_0;



    x_d_result_0[int(0)] = dpy_0.primal_0[int(0)] * dOut_1;

// #line 1430
    float2 y_d_result_0;

// #line 1435
    y_d_result_0[int(0)] = dpx_1.primal_0[int(0)] * dOut_1;

// #line 1434
    x_d_result_0[int(1)] = dpy_0.primal_0[int(1)] * dOut_1;
    y_d_result_0[int(1)] = dpx_1.primal_0[int(1)] * dOut_1;

// #line 1435
    dpx_1.primal_0 = dpx_1.primal_0;

// #line 1435
    dpx_1.differential_0 = x_d_result_0;

// #line 1435
    dpy_0.primal_0 = dpy_0.primal_0;

// #line 1435
    dpy_0.differential_0 = y_d_result_0;



    return;
}


// #line 1 "token paste"
void _d_cos_0(inout DiffPair_float_0 dpx_2, float dOut_2)
{

// #line 1
    float _S2 = - sin(dpx_2.primal_0) * dOut_2;

// #line 1
    dpx_2.primal_0 = dpx_2.primal_0;

// #line 1
    dpx_2.differential_0 = _S2;

// #line 1708 "diff.meta.slang"
    return;
}


// #line 1 "token paste"
void _d_sin_0(inout DiffPair_float_0 dpx_3, float dOut_3)
{

// #line 1
    float _S3 = cos(dpx_3.primal_0) * dOut_3;

// #line 1
    dpx_3.primal_0 = dpx_3.primal_0;

// #line 1
    dpx_3.differential_0 = _S3;

// #line 1708 "diff.meta.slang"
    return;
}


// #line 104 "D:/Programs/SlangU/Assets/Shaders/ocean.slang"
float3x3 createRotationMatrixAxisAngle_0(float3 axis_0, float angle_0)
{

// #line 105
    float s_0 = sin(angle_0);
    float c_0 = cos(angle_0);
    float oc_0 = 1.0 - c_0;

    float _S4 = axis_0.x;

// #line 109
    float _S5 = oc_0 * _S4;

// #line 109
    float _S6 = axis_0.y;

// #line 109
    float _S7 = _S5 * _S6;

// #line 109
    float _S8 = axis_0.z;

// #line 109
    float _S9 = _S8 * s_0;

// #line 109
    float _S10 = oc_0 * _S8;

// #line 109
    float _S11 = _S10 * _S4;

// #line 109
    float _S12 = _S6 * s_0;
    float _S13 = oc_0 * _S6;

// #line 110
    float _S14 = _S13 * _S8;

// #line 110
    float _S15 = _S4 * s_0;

// #line 108
    return float3x3(_S5 * _S4 + c_0, _S7 - _S9, _S11 + _S12, _S7 + _S9, _S13 * _S6 + c_0, _S14 - _S15, _S11 - _S12, _S14 + _S15, _S10 * _S8 + c_0);
}


// #line 116
float3 getRay_0(float2 fragCoord_0, float2 resolution_0)
{

// #line 117
    float _S16 = resolution_0.x;

// #line 117
    float _S17 = resolution_0.y;

// #line 117
    float2 uv_0 = (fragCoord_0.xy / resolution_0.xy * 2.0 - 1.0) * float2(_S16 / _S17, 1.0);


    float3 proj_0 = normalize(float3(uv_0.x, uv_0.y, 1.5));

// #line 120
    bool _S18;
    if(_S16 < 40.0)
    {

// #line 121
        _S18 = true;

// #line 121
    }
    else
    {

// #line 121
        _S18 = _S17 < 40.0;

// #line 121
    }

// #line 121
    if(_S18)
    {

// #line 122
        return proj_0;
    }
    float2 normalizedMouse_0 = _MousePosition_0.xy / resolution_0;
    float3x3 _S19 = createRotationMatrixAxisAngle_0(float3(0.0, -1.0, 0.0), 3.0 * ((1.0 - normalizedMouse_0.x + 0.5) * 2.0 - 1.0));
    float3 _S20 = float3(1.0, 0.0, 0.0);

// #line 126
    float _S21 = normalizedMouse_0.y;

// #line 126
    float _S22;

// #line 126
    if(_S21 == 0.0)
    {

// #line 126
        _S22 = 0.34999999403953552;

// #line 126
    }
    else
    {

// #line 126
        _S22 = _S21;

// #line 126
    }
    return mul(mul(_S19, createRotationMatrixAxisAngle_0(_S20, 0.5 + 1.5 * (_S22 * 2.0 - 1.0))), proj_0);
}


// #line 151
float3 getSunDirection_0()
{

// #line 152
    float time_0 = _Time_0.y;
    return normalize(float3(sin(time_0), 1.0, cos(time_0)));
}


// #line 136
float3 extra_cheap_atmosphere_0(float3 raydir_0, float3 sundir_0)
{

// #line 136
    float3 _S23 = sundir_0;
    _S23[int(1)] = max(sundir_0.y, -0.07000000029802322);
    float _S24 = raydir_0.y;

// #line 138
    float special_trick_0 = 1.0 / (_S24 + 0.10000000149011612);

// #line 143
    float3 _S25 = (float3)1.0;

// #line 143
    float3 _S26 = (float3)0.0;

// #line 143
    float3 _S27 = float3(5.5, 13.0, 22.39999961853027344);



    return max(_S26, _S27 / 22.39999961853027344 * lerp(_S25, max(_S26, _S25 - _S27 / 22.39999961853027344), (float3)(1.0 / (_S23.y * 11.0 + 1.0))) - _S27 * 0.0020000000949949 * (special_trick_0 + -6.0 * _S23.y * _S23.y)) * (special_trick_0 * (0.23999999463558197 + pow(abs(dot(_S23, raydir_0)), 2.0) * 0.23999999463558197)) * (1.0 + pow(1.0 - _S24, 3.0));
}


// #line 157
float3 getAtmosphere_0(float3 dir_0)
{

// #line 158
    return extra_cheap_atmosphere_0(dir_0, getSunDirection_0()) * 0.5;
}


float getSun_0(float3 dir_1)
{

// #line 163
    return pow(max(0.0, dot(dir_1, getSunDirection_0())), 720.0) * 210.0;
}


float3 aces_tonemap_0(float3 color_0)
{

// #line 180
    float3 v_0 = mul(color_0, float3x3(0.59719002246856689, 0.07599999755620956, 0.0284000001847744, 0.35457998514175415, 0.9083399772644043, 0.1338299959897995, 0.04822999984025955, 0.01565999910235405, 0.83776998519897461));


    return pow(clamp(mul((v_0 * (v_0 + 0.02457859925925732) - 0.0000905370034161) / (v_0 * (0.98372900485992432 * v_0 + 0.43295100331306458) + 0.23808099329471588), float3x3(1.60475003719329834, -0.10208000242710114, -0.00326999998651445, -0.53108000755310059, 1.10812997817993164, -0.07276000082492828, -0.07366999983787537, -0.00604999996721745, 1.0760200023651123)), (float3)0.0, (float3)1.0), (float3)0.45454543828964233);
}


// #line 131
float intersectPlane_0(float3 origin_0, float3 direction_0, float3 point_0, float3 normal_0)
{

// #line 132
    return clamp(dot(point_0 - origin_0, normal_0) / dot(direction_0, normal_0), -1.0, 9.991999e+06);
}


// #line 1 "token paste"
void _d_exp_0(inout DiffPair_float_0 dpx_4, float dOut_4)
{

// #line 1
    float _S28 = exp(dpx_4.primal_0) * dOut_4;

// #line 1
    dpx_4.primal_0 = dpx_4.primal_0;

// #line 1
    dpx_4.differential_0 = _S28;

// #line 1708 "diff.meta.slang"
    return;
}


// #line 27 "D:/Programs/SlangU/Assets/Shaders/ocean.slang"
float2 wavedx_0(float2 position_0, float2 direction_1, float frequency_0, float timeshift_0)
{

// #line 28
    float x_0 = dot(direction_1, position_0) * frequency_0 + timeshift_0;
    float wave_0 = exp(sin(x_0) - 1.0);

    return float2(wave_0, - (wave_0 * cos(x_0)));
}




float getwaves_0(float2 position_1)
{

// #line 38
    float _S29 = length(position_1) * 0.10000000149011612;

// #line 48
    float2 p_0 = float2(sin(0.0), cos(0.0));

// #line 55
    float2 res_0 = wavedx_0(position_1, p_0, 1.0, _Time_0.y * 5.0 + _S29);


    float2 _S30 = position_1 + p_0 * res_0.y * 0.37999999523162842;

// #line 65
    float _S31 = lerp(1.0, 0.0, 0.20000000298023224);

// #line 48
    float2 p_1 = float2(sin(1232.39990234375), cos(1232.39990234375));

// #line 55
    float2 res_1 = wavedx_0(_S30, p_1, 1.1799999475479126, _Time_0.y * 5.35000038146972656 + _S29);


    float2 _S32 = _S30 + p_1 * res_1.y * _S31 * 0.37999999523162842;

// #line 65
    float _S33 = lerp(_S31, 0.0, 0.20000000298023224);

// #line 48
    float2 p_2 = float2(sin(2464.7998046875), cos(2464.7998046875));

// #line 55
    float2 res_2 = wavedx_0(_S32, p_2, 1.39239990711212158, _Time_0.y * 5.72450065612792969 + _S29);


    float2 _S34 = _S32 + p_2 * res_2.y * _S33 * 0.37999999523162842;

// #line 65
    float _S35 = lerp(_S33, 0.0, 0.20000000298023224);

// #line 48
    float2 p_3 = float2(sin(3697.19970703125), cos(3697.19970703125));

// #line 55
    float2 res_3 = wavedx_0(_S34, p_3, 1.64303183555603027, _Time_0.y * 6.12521600723266602 + _S29);


    float2 _S36 = _S34 + p_3 * res_3.y * _S35 * 0.37999999523162842;

// #line 65
    float _S37 = lerp(_S35, 0.0, 0.20000000298023224);

// #line 48
    float2 p_4 = float2(sin(4929.599609375), cos(4929.599609375));

// #line 55
    float2 res_4 = wavedx_0(_S36, p_4, 1.93877744674682617, _Time_0.y * 6.55398130416870117 + _S29);


    float2 _S38 = _S36 + p_4 * res_4.y * _S37 * 0.37999999523162842;

// #line 65
    float _S39 = lerp(_S37, 0.0, 0.20000000298023224);

// #line 48
    float2 p_5 = float2(sin(6161.99951171875), cos(6161.99951171875));

// #line 55
    float2 res_5 = wavedx_0(_S38, p_5, 2.28775739669799805, _Time_0.y * 7.01276016235351562 + _S29);


    float2 _S40 = _S38 + p_5 * res_5.y * _S39 * 0.37999999523162842;

// #line 65
    float _S41 = lerp(_S39, 0.0, 0.20000000298023224);

// #line 48
    float2 p_6 = float2(sin(7394.3994140625), cos(7394.3994140625));

// #line 55
    float2 res_6 = wavedx_0(_S40, p_6, 2.69955348968505859, _Time_0.y * 7.50365352630615234 + _S29);


    float2 _S42 = _S40 + p_6 * res_6.y * _S41 * 0.37999999523162842;

// #line 65
    float _S43 = lerp(_S41, 0.0, 0.20000000298023224);

// #line 48
    float2 p_7 = float2(sin(8626.798828125), cos(8626.798828125));

// #line 55
    float2 res_7 = wavedx_0(_S42, p_7, 3.18547296524047852, _Time_0.y * 8.02890968322753906 + _S29);


    float2 _S44 = _S42 + p_7 * res_7.y * _S43 * 0.37999999523162842;

// #line 65
    float _S45 = lerp(_S43, 0.0, 0.20000000298023224);

// #line 48
    float2 p_8 = float2(sin(9859.19921875), cos(9859.19921875));

// #line 55
    float2 res_8 = wavedx_0(_S44, p_8, 3.75885796546936035, _Time_0.y * 8.59093379974365234 + _S29);


    float2 _S46 = _S44 + p_8 * res_8.y * _S45 * 0.37999999523162842;

// #line 65
    float _S47 = lerp(_S45, 0.0, 0.20000000298023224);

// #line 48
    float2 p_9 = float2(sin(11091.599609375), cos(11091.599609375));

// #line 55
    float2 res_9 = wavedx_0(_S46, p_9, 4.43545198440551758, _Time_0.y * 9.19229984283447266 + _S29);


    float2 _S48 = _S46 + p_9 * res_9.y * _S47 * 0.37999999523162842;

// #line 65
    float _S49 = lerp(_S47, 0.0, 0.20000000298023224);

// #line 48
    float2 p_10 = float2(sin(12324.0), cos(12324.0));

// #line 55
    float2 res_10 = wavedx_0(_S48, p_10, 5.23383331298828125, _Time_0.y * 9.83576107025146484 + _S29);

// #line 65
    float _S50 = lerp(_S49, 0.0, 0.20000000298023224);

// #line 73
    return (res_0.x + res_1.x * _S31 + res_2.x * _S33 + res_3.x * _S35 + res_4.x * _S37 + res_5.x * _S39 + res_6.x * _S41 + res_7.x * _S43 + res_8.x * _S45 + res_9.x * _S47 + res_10.x * _S49 + wavedx_0(_S48 + p_10 * res_10.y * _S49 * 0.37999999523162842, float2(sin(13556.400390625), cos(13556.400390625)), 6.17592287063598633, _Time_0.y * 10.52426528930664062 + _S29).x * _S50) / (1.0 + _S31 + _S33 + _S35 + _S37 + _S39 + _S41 + _S43 + _S45 + _S47 + _S49 + _S50);
}


float raymarchwater_0(float3 camera_0, float3 start_0, float3 end_0, float depth_0)
{
    float3 _S51 = normalize(end_0 - start_0);

// #line 79
    int i_0 = int(0);

// #line 79
    float3 pos_0 = start_0;
    for(;;)
    {

// #line 80
        if(i_0 < int(64))
        {
        }
        else
        {

// #line 80
            break;
        }
        float height_0 = getwaves_0(pos_0.xz) * depth_0 - depth_0;

        if(height_0 + 0.00999999977648258 > pos_0.y)
        {

// #line 85
            return distance(pos_0, camera_0);
        }

        float3 pos_1 = pos_0 + _S51 * (pos_0.y - height_0);

// #line 80
        i_0 = i_0 + int(1);

// #line 80
        pos_0 = pos_1;

// #line 80
    }

// #line 92
    return distance(start_0, camera_0);
}


// #line 27
struct s_bwd_prop_wavedx_Intermediates_0
{
    float _S52;
    float _S53;
    float _S54;
    float _S55;
};



struct s_bwd_prop_getwaves_Intermediates_0
{
    s_bwd_prop_wavedx_Intermediates_0 _S56;
    s_bwd_prop_wavedx_Intermediates_0 _S57;
    s_bwd_prop_wavedx_Intermediates_0 _S58;
    s_bwd_prop_wavedx_Intermediates_0 _S59;
    s_bwd_prop_wavedx_Intermediates_0 _S60;
    s_bwd_prop_wavedx_Intermediates_0 _S61;
    s_bwd_prop_wavedx_Intermediates_0 _S62;
    s_bwd_prop_wavedx_Intermediates_0 _S63;
    s_bwd_prop_wavedx_Intermediates_0 _S64;
    s_bwd_prop_wavedx_Intermediates_0 _S65;
    s_bwd_prop_wavedx_Intermediates_0 _S66;
    s_bwd_prop_wavedx_Intermediates_0 _S67;
    s_bwd_prop_wavedx_Intermediates_0 _S68;
    s_bwd_prop_wavedx_Intermediates_0 _S69;
    s_bwd_prop_wavedx_Intermediates_0 _S70;
    s_bwd_prop_wavedx_Intermediates_0 _S71;
    s_bwd_prop_wavedx_Intermediates_0 _S72;
    s_bwd_prop_wavedx_Intermediates_0 _S73;
    s_bwd_prop_wavedx_Intermediates_0 _S74;
    s_bwd_prop_wavedx_Intermediates_0 _S75;
    s_bwd_prop_wavedx_Intermediates_0 _S76;
    s_bwd_prop_wavedx_Intermediates_0 _S77;
    s_bwd_prop_wavedx_Intermediates_0 _S78;
    s_bwd_prop_wavedx_Intermediates_0 _S79;
    s_bwd_prop_wavedx_Intermediates_0 _S80;
    s_bwd_prop_wavedx_Intermediates_0 _S81;
    s_bwd_prop_wavedx_Intermediates_0 _S82;
    s_bwd_prop_wavedx_Intermediates_0 _S83;
    s_bwd_prop_wavedx_Intermediates_0 _S84;
    s_bwd_prop_wavedx_Intermediates_0 _S85;
    s_bwd_prop_wavedx_Intermediates_0 _S86;
    s_bwd_prop_wavedx_Intermediates_0 _S87;
    s_bwd_prop_wavedx_Intermediates_0 _S88;
    s_bwd_prop_wavedx_Intermediates_0 _S89;
    s_bwd_prop_wavedx_Intermediates_0 _S90;
    s_bwd_prop_wavedx_Intermediates_0 _S91;
    s_bwd_prop_wavedx_Intermediates_0 _S92;
    float _S93;
    float _S94;
    float _S95;
    float2 _S96;
    float _S97;
    float _S98;
    float _S99;
    float2 _S100;
    float _S101;
    float _S102;
    float _S103;
    float2 _S104;
    float _S105;
    float _S106;
    float _S107;
    float2 _S108;
    float _S109;
    float _S110;
    float _S111;
    float2 _S112;
    float _S113;
    float _S114;
    float _S115;
    float2 _S116;
    float _S117;
    float _S118;
    float _S119;
    float2 _S120;
    float _S121;
    float _S122;
    float _S123;
    float2 _S124;
    float _S125;
    float _S126;
    float _S127;
    float2 _S128;
    float _S129;
    float _S130;
    float _S131;
    float2 _S132;
    float _S133;
    float _S134;
    float _S135;
    float2 _S136;
    float _S137;
    float _S138;
    float _S139;
    float2 _S140;
    float _S141;
    float _S142;
    float _S143;
    float2 _S144;
    float _S145;
    float _S146;
    float _S147;
    float2 _S148;
    float _S149;
    float _S150;
    float _S151;
    float2 _S152;
    float _S153;
    float _S154;
    float _S155;
    float2 _S156;
    float _S157;
    float _S158;
    float _S159;
    float2 _S160;
    float _S161;
    float _S162;
    float _S163;
    float2 _S164;
    float _S165;
    float _S166;
    float _S167;
    float2 _S168;
    float _S169;
    float _S170;
    float _S171;
    float2 _S172;
    float _S173;
    float _S174;
    float _S175;
    float2 _S176;
    float _S177;
    float _S178;
    float _S179;
    float2 _S180;
    float _S181;
    float _S182;
    float _S183;
    float2 _S184;
    float _S185;
    float _S186;
    float _S187;
    float2 _S188;
    float _S189;
    float _S190;
    float _S191;
    float2 _S192;
    float _S193;
    float _S194;
    float _S195;
    float2 _S196;
    float _S197;
    float _S198;
    float _S199;
    float2 _S200;
    float _S201;
    float _S202;
    float _S203;
    float2 _S204;
    float _S205;
    float _S206;
    float _S207;
    float2 _S208;
    float _S209;
    float _S210;
    float _S211;
    float2 _S212;
    float _S213;
    float _S214;
    float _S215;
    float2 _S216;
    float _S217;
    float _S218;
    float _S219;
    float2 _S220;
    float _S221;
    float _S222;
    float _S223;
    float2 _S224;
    float _S225;
    float _S226;
    float _S227;
    float2 _S228;
    float _S229;
    float _S230;
    float _S231;
    float2 _S232;
    float _S233;
    float _S234;
    float _S235;
    float2 _S236;
    float _S237;
    float _S238;
    float _S239;
    float2 _S240;
};


// #line 37
float s_primal_ctx_length_0(float2 _S241)
{

// #line 37
    return length(_S241);
}


// #line 37
float s_primal_ctx_sin_0(float _S242)
{

// #line 37
    return sin(_S242);
}


// #line 37
float s_primal_ctx_cos_0(float _S243)
{

// #line 37
    return cos(_S243);
}


// #line 37
float s_primal_ctx_dot_0(float2 _S244, float2 _S245)
{

// #line 37
    return dot(_S244, _S245);
}


// #line 37
float s_primal_ctx_exp_0(float _S246)
{

// #line 37
    return exp(_S246);
}


// #line 37
float2 s_primal_ctx_wavedx_0(float2 dpposition_0, float2 dpdirection_0, float dpfrequency_0, float dptimeshift_0, out s_bwd_prop_wavedx_Intermediates_0 _s_diff_ctx_0)
{

// #line 27
    _s_diff_ctx_0._S52 = 0.0;

// #line 27
    _s_diff_ctx_0._S53 = 0.0;

// #line 27
    _s_diff_ctx_0._S54 = 0.0;

// #line 27
    _s_diff_ctx_0._S55 = 0.0;

// #line 27
    float _S247 = s_primal_ctx_dot_0(dpdirection_0, dpposition_0);

// #line 27
    _s_diff_ctx_0._S52 = _S247;
    float x_1 = _S247 * dpfrequency_0 + dptimeshift_0;

// #line 28
    float _S248 = s_primal_ctx_sin_0(x_1);

// #line 28
    _s_diff_ctx_0._S53 = _S248;

// #line 28
    float _S249 = s_primal_ctx_exp_0(_S248 - 1.0);

// #line 28
    _s_diff_ctx_0._S54 = _S249;

// #line 28
    float _S250 = s_primal_ctx_cos_0(x_1);

// #line 28
    _s_diff_ctx_0._S55 = _S250;

// #line 28
    return float2(_S249, - (_S249 * _S250));
}


// #line 28
float s_primal_ctx_lerp_0(float _S251, float _S252, float _S253)
{

// #line 28
    return lerp(_S251, _S252, _S253);
}


// #line 28
float s_primal_ctx_getwaves_0(float2 dpposition_1, out s_bwd_prop_getwaves_Intermediates_0 _s_diff_ctx_1)
{

// #line 37
    s_bwd_prop_wavedx_Intermediates_0 _S254 = { 0.0, 0.0, 0.0, 0.0 };

// #line 37
    float2 _S255 = (float2)0.0;

// #line 37
    _s_diff_ctx_1._S56 = _S254;

// #line 37
    _s_diff_ctx_1._S57 = _S254;

// #line 37
    _s_diff_ctx_1._S58 = _S254;

// #line 37
    _s_diff_ctx_1._S59 = _S254;

// #line 37
    _s_diff_ctx_1._S60 = _S254;

// #line 37
    _s_diff_ctx_1._S61 = _S254;

// #line 37
    _s_diff_ctx_1._S62 = _S254;

// #line 37
    _s_diff_ctx_1._S63 = _S254;

// #line 37
    _s_diff_ctx_1._S64 = _S254;

// #line 37
    _s_diff_ctx_1._S65 = _S254;

// #line 37
    _s_diff_ctx_1._S66 = _S254;

// #line 37
    _s_diff_ctx_1._S67 = _S254;

// #line 37
    _s_diff_ctx_1._S68 = _S254;

// #line 37
    _s_diff_ctx_1._S69 = _S254;

// #line 37
    _s_diff_ctx_1._S70 = _S254;

// #line 37
    _s_diff_ctx_1._S71 = _S254;

// #line 37
    _s_diff_ctx_1._S72 = _S254;

// #line 37
    _s_diff_ctx_1._S73 = _S254;

// #line 37
    _s_diff_ctx_1._S74 = _S254;

// #line 37
    _s_diff_ctx_1._S75 = _S254;

// #line 37
    _s_diff_ctx_1._S76 = _S254;

// #line 37
    _s_diff_ctx_1._S77 = _S254;

// #line 37
    _s_diff_ctx_1._S78 = _S254;

// #line 37
    _s_diff_ctx_1._S79 = _S254;

// #line 37
    _s_diff_ctx_1._S80 = _S254;

// #line 37
    _s_diff_ctx_1._S81 = _S254;

// #line 37
    _s_diff_ctx_1._S82 = _S254;

// #line 37
    _s_diff_ctx_1._S83 = _S254;

// #line 37
    _s_diff_ctx_1._S84 = _S254;

// #line 37
    _s_diff_ctx_1._S85 = _S254;

// #line 37
    _s_diff_ctx_1._S86 = _S254;

// #line 37
    _s_diff_ctx_1._S87 = _S254;

// #line 37
    _s_diff_ctx_1._S88 = _S254;

// #line 37
    _s_diff_ctx_1._S89 = _S254;

// #line 37
    _s_diff_ctx_1._S90 = _S254;

// #line 37
    _s_diff_ctx_1._S91 = _S254;

// #line 37
    _s_diff_ctx_1._S92 = _S254;

// #line 37
    _s_diff_ctx_1._S93 = 0.0;

// #line 37
    _s_diff_ctx_1._S94 = 0.0;

// #line 37
    _s_diff_ctx_1._S95 = 0.0;

// #line 37
    _s_diff_ctx_1._S96 = _S255;

// #line 37
    _s_diff_ctx_1._S97 = 0.0;

// #line 37
    _s_diff_ctx_1._S98 = 0.0;

// #line 37
    _s_diff_ctx_1._S99 = 0.0;

// #line 37
    _s_diff_ctx_1._S100 = _S255;

// #line 37
    _s_diff_ctx_1._S101 = 0.0;

// #line 37
    _s_diff_ctx_1._S102 = 0.0;

// #line 37
    _s_diff_ctx_1._S103 = 0.0;

// #line 37
    _s_diff_ctx_1._S104 = _S255;

// #line 37
    _s_diff_ctx_1._S105 = 0.0;

// #line 37
    _s_diff_ctx_1._S106 = 0.0;

// #line 37
    _s_diff_ctx_1._S107 = 0.0;

// #line 37
    _s_diff_ctx_1._S108 = _S255;

// #line 37
    _s_diff_ctx_1._S109 = 0.0;

// #line 37
    _s_diff_ctx_1._S110 = 0.0;

// #line 37
    _s_diff_ctx_1._S111 = 0.0;

// #line 37
    _s_diff_ctx_1._S112 = _S255;

// #line 37
    _s_diff_ctx_1._S113 = 0.0;

// #line 37
    _s_diff_ctx_1._S114 = 0.0;

// #line 37
    _s_diff_ctx_1._S115 = 0.0;

// #line 37
    _s_diff_ctx_1._S116 = _S255;

// #line 37
    _s_diff_ctx_1._S117 = 0.0;

// #line 37
    _s_diff_ctx_1._S118 = 0.0;

// #line 37
    _s_diff_ctx_1._S119 = 0.0;

// #line 37
    _s_diff_ctx_1._S120 = _S255;

// #line 37
    _s_diff_ctx_1._S121 = 0.0;

// #line 37
    _s_diff_ctx_1._S122 = 0.0;

// #line 37
    _s_diff_ctx_1._S123 = 0.0;

// #line 37
    _s_diff_ctx_1._S124 = _S255;

// #line 37
    _s_diff_ctx_1._S125 = 0.0;

// #line 37
    _s_diff_ctx_1._S126 = 0.0;

// #line 37
    _s_diff_ctx_1._S127 = 0.0;

// #line 37
    _s_diff_ctx_1._S128 = _S255;

// #line 37
    _s_diff_ctx_1._S129 = 0.0;

// #line 37
    _s_diff_ctx_1._S130 = 0.0;

// #line 37
    _s_diff_ctx_1._S131 = 0.0;

// #line 37
    _s_diff_ctx_1._S132 = _S255;

// #line 37
    _s_diff_ctx_1._S133 = 0.0;

// #line 37
    _s_diff_ctx_1._S134 = 0.0;

// #line 37
    _s_diff_ctx_1._S135 = 0.0;

// #line 37
    _s_diff_ctx_1._S136 = _S255;

// #line 37
    _s_diff_ctx_1._S137 = 0.0;

// #line 37
    _s_diff_ctx_1._S138 = 0.0;

// #line 37
    _s_diff_ctx_1._S139 = 0.0;

// #line 37
    _s_diff_ctx_1._S140 = _S255;

// #line 37
    _s_diff_ctx_1._S141 = 0.0;

// #line 37
    _s_diff_ctx_1._S142 = 0.0;

// #line 37
    _s_diff_ctx_1._S143 = 0.0;

// #line 37
    _s_diff_ctx_1._S144 = _S255;

// #line 37
    _s_diff_ctx_1._S145 = 0.0;

// #line 37
    _s_diff_ctx_1._S146 = 0.0;

// #line 37
    _s_diff_ctx_1._S147 = 0.0;

// #line 37
    _s_diff_ctx_1._S148 = _S255;

// #line 37
    _s_diff_ctx_1._S149 = 0.0;

// #line 37
    _s_diff_ctx_1._S150 = 0.0;

// #line 37
    _s_diff_ctx_1._S151 = 0.0;

// #line 37
    _s_diff_ctx_1._S152 = _S255;

// #line 37
    _s_diff_ctx_1._S153 = 0.0;

// #line 37
    _s_diff_ctx_1._S154 = 0.0;

// #line 37
    _s_diff_ctx_1._S155 = 0.0;

// #line 37
    _s_diff_ctx_1._S156 = _S255;

// #line 37
    _s_diff_ctx_1._S157 = 0.0;

// #line 37
    _s_diff_ctx_1._S158 = 0.0;

// #line 37
    _s_diff_ctx_1._S159 = 0.0;

// #line 37
    _s_diff_ctx_1._S160 = _S255;

// #line 37
    _s_diff_ctx_1._S161 = 0.0;

// #line 37
    _s_diff_ctx_1._S162 = 0.0;

// #line 37
    _s_diff_ctx_1._S163 = 0.0;

// #line 37
    _s_diff_ctx_1._S164 = _S255;

// #line 37
    _s_diff_ctx_1._S165 = 0.0;

// #line 37
    _s_diff_ctx_1._S166 = 0.0;

// #line 37
    _s_diff_ctx_1._S167 = 0.0;

// #line 37
    _s_diff_ctx_1._S168 = _S255;

// #line 37
    _s_diff_ctx_1._S169 = 0.0;

// #line 37
    _s_diff_ctx_1._S170 = 0.0;

// #line 37
    _s_diff_ctx_1._S171 = 0.0;

// #line 37
    _s_diff_ctx_1._S172 = _S255;

// #line 37
    _s_diff_ctx_1._S173 = 0.0;

// #line 37
    _s_diff_ctx_1._S174 = 0.0;

// #line 37
    _s_diff_ctx_1._S175 = 0.0;

// #line 37
    _s_diff_ctx_1._S176 = _S255;

// #line 37
    _s_diff_ctx_1._S177 = 0.0;

// #line 37
    _s_diff_ctx_1._S178 = 0.0;

// #line 37
    _s_diff_ctx_1._S179 = 0.0;

// #line 37
    _s_diff_ctx_1._S180 = _S255;

// #line 37
    _s_diff_ctx_1._S181 = 0.0;

// #line 37
    _s_diff_ctx_1._S182 = 0.0;

// #line 37
    _s_diff_ctx_1._S183 = 0.0;

// #line 37
    _s_diff_ctx_1._S184 = _S255;

// #line 37
    _s_diff_ctx_1._S185 = 0.0;

// #line 37
    _s_diff_ctx_1._S186 = 0.0;

// #line 37
    _s_diff_ctx_1._S187 = 0.0;

// #line 37
    _s_diff_ctx_1._S188 = _S255;

// #line 37
    _s_diff_ctx_1._S189 = 0.0;

// #line 37
    _s_diff_ctx_1._S190 = 0.0;

// #line 37
    _s_diff_ctx_1._S191 = 0.0;

// #line 37
    _s_diff_ctx_1._S192 = _S255;

// #line 37
    _s_diff_ctx_1._S193 = 0.0;

// #line 37
    _s_diff_ctx_1._S194 = 0.0;

// #line 37
    _s_diff_ctx_1._S195 = 0.0;

// #line 37
    _s_diff_ctx_1._S196 = _S255;

// #line 37
    _s_diff_ctx_1._S197 = 0.0;

// #line 37
    _s_diff_ctx_1._S198 = 0.0;

// #line 37
    _s_diff_ctx_1._S199 = 0.0;

// #line 37
    _s_diff_ctx_1._S200 = _S255;

// #line 37
    _s_diff_ctx_1._S201 = 0.0;

// #line 37
    _s_diff_ctx_1._S202 = 0.0;

// #line 37
    _s_diff_ctx_1._S203 = 0.0;

// #line 37
    _s_diff_ctx_1._S204 = _S255;

// #line 37
    _s_diff_ctx_1._S205 = 0.0;

// #line 37
    _s_diff_ctx_1._S206 = 0.0;

// #line 37
    _s_diff_ctx_1._S207 = 0.0;

// #line 37
    _s_diff_ctx_1._S208 = _S255;

// #line 37
    _s_diff_ctx_1._S209 = 0.0;

// #line 37
    _s_diff_ctx_1._S210 = 0.0;

// #line 37
    _s_diff_ctx_1._S211 = 0.0;

// #line 37
    _s_diff_ctx_1._S212 = _S255;

// #line 37
    _s_diff_ctx_1._S213 = 0.0;

// #line 37
    _s_diff_ctx_1._S214 = 0.0;

// #line 37
    _s_diff_ctx_1._S215 = 0.0;

// #line 37
    _s_diff_ctx_1._S216 = _S255;

// #line 37
    _s_diff_ctx_1._S217 = 0.0;

// #line 37
    _s_diff_ctx_1._S218 = 0.0;

// #line 37
    _s_diff_ctx_1._S219 = 0.0;

// #line 37
    _s_diff_ctx_1._S220 = _S255;

// #line 37
    _s_diff_ctx_1._S221 = 0.0;

// #line 37
    _s_diff_ctx_1._S222 = 0.0;

// #line 37
    _s_diff_ctx_1._S223 = 0.0;

// #line 37
    _s_diff_ctx_1._S224 = _S255;

// #line 37
    _s_diff_ctx_1._S225 = 0.0;

// #line 37
    _s_diff_ctx_1._S226 = 0.0;

// #line 37
    _s_diff_ctx_1._S227 = 0.0;

// #line 37
    _s_diff_ctx_1._S228 = _S255;

// #line 37
    _s_diff_ctx_1._S229 = 0.0;

// #line 37
    _s_diff_ctx_1._S230 = 0.0;

// #line 37
    _s_diff_ctx_1._S231 = 0.0;

// #line 37
    _s_diff_ctx_1._S232 = _S255;

// #line 37
    _s_diff_ctx_1._S233 = 0.0;

// #line 37
    _s_diff_ctx_1._S234 = 0.0;

// #line 37
    _s_diff_ctx_1._S235 = 0.0;

// #line 37
    _s_diff_ctx_1._S236 = _S255;

// #line 37
    _s_diff_ctx_1._S237 = 0.0;

// #line 37
    _s_diff_ctx_1._S238 = 0.0;

// #line 37
    _s_diff_ctx_1._S239 = 0.0;

// #line 37
    _s_diff_ctx_1._S240 = _S255;

// #line 37
    float _S256 = s_primal_ctx_length_0(dpposition_1);

// #line 37
    _s_diff_ctx_1._S93 = _S256;
    float _S257 = _S256 * 0.10000000149011612;

// #line 38
    float _S258 = s_primal_ctx_sin_0(0.0);

// #line 38
    _s_diff_ctx_1._S94 = _S258;

// #line 38
    float _S259 = s_primal_ctx_cos_0(0.0);

// #line 38
    _s_diff_ctx_1._S95 = _S259;

// #line 48
    float2 p_11 = float2(_S258, _S259);

// #line 55
    float _S260 = _Time_0.y;

// #line 55
    float2 _S261 = s_primal_ctx_wavedx_0(dpposition_1, p_11, 1.0, _S260 * 5.0 + _S257, _s_diff_ctx_1._S56);

// #line 55
    _s_diff_ctx_1._S96 = _S261;


    float2 _S262 = dpposition_1 + p_11 * _S261.y * 0.37999999523162842;


    float _S263 = _S261.x;

// #line 61
    float _S264 = s_primal_ctx_lerp_0(1.0, 0.0, 0.20000000298023224);

// #line 61
    _s_diff_ctx_1._S97 = _S264;

// #line 61
    float _S265 = s_primal_ctx_sin_0(1232.39990234375);

// #line 61
    _s_diff_ctx_1._S98 = _S265;

// #line 61
    float _S266 = s_primal_ctx_cos_0(1232.39990234375);

// #line 61
    _s_diff_ctx_1._S99 = _S266;

// #line 48
    float2 p_12 = float2(_S265, _S266);

// #line 55
    float2 _S267 = s_primal_ctx_wavedx_0(_S262, p_12, 1.1799999475479126, _S260 * 5.35000038146972656 + _S257, _s_diff_ctx_1._S57);

// #line 55
    _s_diff_ctx_1._S100 = _S267;


    float2 _S268 = _S262 + p_12 * _S267.y * _S264 * 0.37999999523162842;


    float sumOfValues_0 = _S263 + _S267.x * _S264;
    float sumOfWeights_0 = 1.0 + _S264;

// #line 62
    float _S269 = s_primal_ctx_lerp_0(_S264, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S101 = _S269;

// #line 62
    float _S270 = s_primal_ctx_sin_0(2464.7998046875);

// #line 62
    _s_diff_ctx_1._S102 = _S270;

// #line 62
    float _S271 = s_primal_ctx_cos_0(2464.7998046875);

// #line 62
    _s_diff_ctx_1._S103 = _S271;

// #line 48
    float2 p_13 = float2(_S270, _S271);

// #line 55
    float2 _S272 = s_primal_ctx_wavedx_0(_S268, p_13, 1.39239990711212158, _S260 * 5.72450065612792969 + _S257, _s_diff_ctx_1._S58);

// #line 55
    _s_diff_ctx_1._S104 = _S272;


    float2 _S273 = _S268 + p_13 * _S272.y * _S269 * 0.37999999523162842;


    float sumOfValues_1 = sumOfValues_0 + _S272.x * _S269;
    float sumOfWeights_1 = sumOfWeights_0 + _S269;

// #line 62
    float _S274 = s_primal_ctx_lerp_0(_S269, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S105 = _S274;

// #line 62
    float _S275 = s_primal_ctx_sin_0(3697.19970703125);

// #line 62
    _s_diff_ctx_1._S106 = _S275;

// #line 62
    float _S276 = s_primal_ctx_cos_0(3697.19970703125);

// #line 62
    _s_diff_ctx_1._S107 = _S276;

// #line 48
    float2 p_14 = float2(_S275, _S276);

// #line 55
    float2 _S277 = s_primal_ctx_wavedx_0(_S273, p_14, 1.64303183555603027, _S260 * 6.12521600723266602 + _S257, _s_diff_ctx_1._S59);

// #line 55
    _s_diff_ctx_1._S108 = _S277;


    float2 _S278 = _S273 + p_14 * _S277.y * _S274 * 0.37999999523162842;


    float sumOfValues_2 = sumOfValues_1 + _S277.x * _S274;
    float sumOfWeights_2 = sumOfWeights_1 + _S274;

// #line 62
    float _S279 = s_primal_ctx_lerp_0(_S274, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S109 = _S279;

// #line 62
    float _S280 = s_primal_ctx_sin_0(4929.599609375);

// #line 62
    _s_diff_ctx_1._S110 = _S280;

// #line 62
    float _S281 = s_primal_ctx_cos_0(4929.599609375);

// #line 62
    _s_diff_ctx_1._S111 = _S281;

// #line 48
    float2 p_15 = float2(_S280, _S281);

// #line 55
    float2 _S282 = s_primal_ctx_wavedx_0(_S278, p_15, 1.93877744674682617, _S260 * 6.55398130416870117 + _S257, _s_diff_ctx_1._S60);

// #line 55
    _s_diff_ctx_1._S112 = _S282;


    float2 _S283 = _S278 + p_15 * _S282.y * _S279 * 0.37999999523162842;


    float sumOfValues_3 = sumOfValues_2 + _S282.x * _S279;
    float sumOfWeights_3 = sumOfWeights_2 + _S279;

// #line 62
    float _S284 = s_primal_ctx_lerp_0(_S279, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S113 = _S284;

// #line 62
    float _S285 = s_primal_ctx_sin_0(6161.99951171875);

// #line 62
    _s_diff_ctx_1._S114 = _S285;

// #line 62
    float _S286 = s_primal_ctx_cos_0(6161.99951171875);

// #line 62
    _s_diff_ctx_1._S115 = _S286;

// #line 48
    float2 p_16 = float2(_S285, _S286);

// #line 55
    float2 _S287 = s_primal_ctx_wavedx_0(_S283, p_16, 2.28775739669799805, _S260 * 7.01276016235351562 + _S257, _s_diff_ctx_1._S61);

// #line 55
    _s_diff_ctx_1._S116 = _S287;


    float2 _S288 = _S283 + p_16 * _S287.y * _S284 * 0.37999999523162842;


    float sumOfValues_4 = sumOfValues_3 + _S287.x * _S284;
    float sumOfWeights_4 = sumOfWeights_3 + _S284;

// #line 62
    float _S289 = s_primal_ctx_lerp_0(_S284, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S117 = _S289;

// #line 62
    float _S290 = s_primal_ctx_sin_0(7394.3994140625);

// #line 62
    _s_diff_ctx_1._S118 = _S290;

// #line 62
    float _S291 = s_primal_ctx_cos_0(7394.3994140625);

// #line 62
    _s_diff_ctx_1._S119 = _S291;

// #line 48
    float2 p_17 = float2(_S290, _S291);

// #line 55
    float2 _S292 = s_primal_ctx_wavedx_0(_S288, p_17, 2.69955348968505859, _S260 * 7.50365352630615234 + _S257, _s_diff_ctx_1._S62);

// #line 55
    _s_diff_ctx_1._S120 = _S292;


    float2 _S293 = _S288 + p_17 * _S292.y * _S289 * 0.37999999523162842;


    float sumOfValues_5 = sumOfValues_4 + _S292.x * _S289;
    float sumOfWeights_5 = sumOfWeights_4 + _S289;

// #line 62
    float _S294 = s_primal_ctx_lerp_0(_S289, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S121 = _S294;

// #line 62
    float _S295 = s_primal_ctx_sin_0(8626.798828125);

// #line 62
    _s_diff_ctx_1._S122 = _S295;

// #line 62
    float _S296 = s_primal_ctx_cos_0(8626.798828125);

// #line 62
    _s_diff_ctx_1._S123 = _S296;

// #line 48
    float2 p_18 = float2(_S295, _S296);

// #line 55
    float2 _S297 = s_primal_ctx_wavedx_0(_S293, p_18, 3.18547296524047852, _S260 * 8.02890968322753906 + _S257, _s_diff_ctx_1._S63);

// #line 55
    _s_diff_ctx_1._S124 = _S297;


    float2 _S298 = _S293 + p_18 * _S297.y * _S294 * 0.37999999523162842;


    float sumOfValues_6 = sumOfValues_5 + _S297.x * _S294;
    float sumOfWeights_6 = sumOfWeights_5 + _S294;

// #line 62
    float _S299 = s_primal_ctx_lerp_0(_S294, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S125 = _S299;

// #line 62
    float _S300 = s_primal_ctx_sin_0(9859.19921875);

// #line 62
    _s_diff_ctx_1._S126 = _S300;

// #line 62
    float _S301 = s_primal_ctx_cos_0(9859.19921875);

// #line 62
    _s_diff_ctx_1._S127 = _S301;

// #line 48
    float2 p_19 = float2(_S300, _S301);

// #line 55
    float2 _S302 = s_primal_ctx_wavedx_0(_S298, p_19, 3.75885796546936035, _S260 * 8.59093379974365234 + _S257, _s_diff_ctx_1._S64);

// #line 55
    _s_diff_ctx_1._S128 = _S302;


    float2 _S303 = _S298 + p_19 * _S302.y * _S299 * 0.37999999523162842;


    float sumOfValues_7 = sumOfValues_6 + _S302.x * _S299;
    float sumOfWeights_7 = sumOfWeights_6 + _S299;

// #line 62
    float _S304 = s_primal_ctx_lerp_0(_S299, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S129 = _S304;

// #line 62
    float _S305 = s_primal_ctx_sin_0(11091.599609375);

// #line 62
    _s_diff_ctx_1._S130 = _S305;

// #line 62
    float _S306 = s_primal_ctx_cos_0(11091.599609375);

// #line 62
    _s_diff_ctx_1._S131 = _S306;

// #line 48
    float2 p_20 = float2(_S305, _S306);

// #line 55
    float2 _S307 = s_primal_ctx_wavedx_0(_S303, p_20, 4.43545198440551758, _S260 * 9.19229984283447266 + _S257, _s_diff_ctx_1._S65);

// #line 55
    _s_diff_ctx_1._S132 = _S307;


    float2 _S308 = _S303 + p_20 * _S307.y * _S304 * 0.37999999523162842;


    float sumOfValues_8 = sumOfValues_7 + _S307.x * _S304;
    float sumOfWeights_8 = sumOfWeights_7 + _S304;

// #line 62
    float _S309 = s_primal_ctx_lerp_0(_S304, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S133 = _S309;

// #line 62
    float _S310 = s_primal_ctx_sin_0(12324.0);

// #line 62
    _s_diff_ctx_1._S134 = _S310;

// #line 62
    float _S311 = s_primal_ctx_cos_0(12324.0);

// #line 62
    _s_diff_ctx_1._S135 = _S311;

// #line 48
    float2 p_21 = float2(_S310, _S311);

// #line 55
    float2 _S312 = s_primal_ctx_wavedx_0(_S308, p_21, 5.23383331298828125, _S260 * 9.83576107025146484 + _S257, _s_diff_ctx_1._S66);

// #line 55
    _s_diff_ctx_1._S136 = _S312;


    float2 _S313 = _S308 + p_21 * _S312.y * _S309 * 0.37999999523162842;


    float sumOfValues_9 = sumOfValues_8 + _S312.x * _S309;
    float sumOfWeights_9 = sumOfWeights_8 + _S309;

// #line 62
    float _S314 = s_primal_ctx_lerp_0(_S309, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S137 = _S314;

// #line 62
    float _S315 = s_primal_ctx_sin_0(13556.400390625);

// #line 62
    _s_diff_ctx_1._S138 = _S315;

// #line 62
    float _S316 = s_primal_ctx_cos_0(13556.400390625);

// #line 62
    _s_diff_ctx_1._S139 = _S316;

// #line 48
    float2 p_22 = float2(_S315, _S316);

// #line 55
    float2 _S317 = s_primal_ctx_wavedx_0(_S313, p_22, 6.17592287063598633, _S260 * 10.52426528930664062 + _S257, _s_diff_ctx_1._S67);

// #line 55
    _s_diff_ctx_1._S140 = _S317;


    float2 _S318 = _S313 + p_22 * _S317.y * _S314 * 0.37999999523162842;


    float sumOfValues_10 = sumOfValues_9 + _S317.x * _S314;
    float sumOfWeights_10 = sumOfWeights_9 + _S314;

// #line 62
    float _S319 = s_primal_ctx_lerp_0(_S314, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S141 = _S319;

// #line 62
    float _S320 = s_primal_ctx_sin_0(14788.80078125);

// #line 62
    _s_diff_ctx_1._S142 = _S320;

// #line 62
    float _S321 = s_primal_ctx_cos_0(14788.80078125);

// #line 62
    _s_diff_ctx_1._S143 = _S321;

// #line 48
    float2 p_23 = float2(_S320, _S321);

// #line 55
    float2 _S322 = s_primal_ctx_wavedx_0(_S318, p_23, 7.28758859634399414, _S260 * 11.26096439361572266 + _S257, _s_diff_ctx_1._S68);

// #line 55
    _s_diff_ctx_1._S144 = _S322;


    float2 _S323 = _S318 + p_23 * _S322.y * _S319 * 0.37999999523162842;


    float sumOfValues_11 = sumOfValues_10 + _S322.x * _S319;
    float sumOfWeights_11 = sumOfWeights_10 + _S319;

// #line 62
    float _S324 = s_primal_ctx_lerp_0(_S319, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S145 = _S324;

// #line 62
    float _S325 = s_primal_ctx_sin_0(16021.201171875);

// #line 62
    _s_diff_ctx_1._S146 = _S325;

// #line 62
    float _S326 = s_primal_ctx_cos_0(16021.201171875);

// #line 62
    _s_diff_ctx_1._S147 = _S326;

// #line 48
    float2 p_24 = float2(_S325, _S326);

// #line 55
    float2 _S327 = s_primal_ctx_wavedx_0(_S323, p_24, 8.59935379028320312, _S260 * 12.04923248291015625 + _S257, _s_diff_ctx_1._S69);

// #line 55
    _s_diff_ctx_1._S148 = _S327;


    float2 _S328 = _S323 + p_24 * _S327.y * _S324 * 0.37999999523162842;


    float sumOfValues_12 = sumOfValues_11 + _S327.x * _S324;
    float sumOfWeights_12 = sumOfWeights_11 + _S324;

// #line 62
    float _S329 = s_primal_ctx_lerp_0(_S324, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S149 = _S329;

// #line 62
    float _S330 = s_primal_ctx_sin_0(17253.6015625);

// #line 62
    _s_diff_ctx_1._S150 = _S330;

// #line 62
    float _S331 = s_primal_ctx_cos_0(17253.6015625);

// #line 62
    _s_diff_ctx_1._S151 = _S331;

// #line 48
    float2 p_25 = float2(_S330, _S331);

// #line 55
    float2 _S332 = s_primal_ctx_wavedx_0(_S328, p_25, 10.14723682403564453, _S260 * 12.89267921447753906 + _S257, _s_diff_ctx_1._S70);

// #line 55
    _s_diff_ctx_1._S152 = _S332;


    float2 _S333 = _S328 + p_25 * _S332.y * _S329 * 0.37999999523162842;


    float sumOfValues_13 = sumOfValues_12 + _S332.x * _S329;
    float sumOfWeights_13 = sumOfWeights_12 + _S329;

// #line 62
    float _S334 = s_primal_ctx_lerp_0(_S329, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S153 = _S334;

// #line 62
    float _S335 = s_primal_ctx_sin_0(18486.001953125);

// #line 62
    _s_diff_ctx_1._S154 = _S335;

// #line 62
    float _S336 = s_primal_ctx_cos_0(18486.001953125);

// #line 62
    _s_diff_ctx_1._S155 = _S336;

// #line 48
    float2 p_26 = float2(_S335, _S336);

// #line 55
    float2 _S337 = s_primal_ctx_wavedx_0(_S333, p_26, 11.97373867034912109, _S260 * 13.79516696929931641 + _S257, _s_diff_ctx_1._S71);

// #line 55
    _s_diff_ctx_1._S156 = _S337;


    float2 _S338 = _S333 + p_26 * _S337.y * _S334 * 0.37999999523162842;


    float sumOfValues_14 = sumOfValues_13 + _S337.x * _S334;
    float sumOfWeights_14 = sumOfWeights_13 + _S334;

// #line 62
    float _S339 = s_primal_ctx_lerp_0(_S334, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S157 = _S339;

// #line 62
    float _S340 = s_primal_ctx_sin_0(19718.40234375);

// #line 62
    _s_diff_ctx_1._S158 = _S340;

// #line 62
    float _S341 = s_primal_ctx_cos_0(19718.40234375);

// #line 62
    _s_diff_ctx_1._S159 = _S341;

// #line 48
    float2 p_27 = float2(_S340, _S341);

// #line 55
    float2 _S342 = s_primal_ctx_wavedx_0(_S338, p_27, 14.12901115417480469, _S260 * 14.76082897186279297 + _S257, _s_diff_ctx_1._S72);

// #line 55
    _s_diff_ctx_1._S160 = _S342;


    float2 _S343 = _S338 + p_27 * _S342.y * _S339 * 0.37999999523162842;


    float sumOfValues_15 = sumOfValues_14 + _S342.x * _S339;
    float sumOfWeights_15 = sumOfWeights_14 + _S339;

// #line 62
    float _S344 = s_primal_ctx_lerp_0(_S339, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S161 = _S344;

// #line 62
    float _S345 = s_primal_ctx_sin_0(20950.802734375);

// #line 62
    _s_diff_ctx_1._S162 = _S345;

// #line 62
    float _S346 = s_primal_ctx_cos_0(20950.802734375);

// #line 62
    _s_diff_ctx_1._S163 = _S346;

// #line 48
    float2 p_28 = float2(_S345, _S346);

// #line 55
    float2 _S347 = s_primal_ctx_wavedx_0(_S343, p_28, 16.67223167419433594, _S260 * 15.79408740997314453 + _S257, _s_diff_ctx_1._S73);

// #line 55
    _s_diff_ctx_1._S164 = _S347;


    float2 _S348 = _S343 + p_28 * _S347.y * _S344 * 0.37999999523162842;


    float sumOfValues_16 = sumOfValues_15 + _S347.x * _S344;
    float sumOfWeights_16 = sumOfWeights_15 + _S344;

// #line 62
    float _S349 = s_primal_ctx_lerp_0(_S344, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S165 = _S349;

// #line 62
    float _S350 = s_primal_ctx_sin_0(22183.203125);

// #line 62
    _s_diff_ctx_1._S166 = _S350;

// #line 62
    float _S351 = s_primal_ctx_cos_0(22183.203125);

// #line 62
    _s_diff_ctx_1._S167 = _S351;

// #line 48
    float2 p_29 = float2(_S350, _S351);

// #line 55
    float2 _S352 = s_primal_ctx_wavedx_0(_S348, p_29, 19.6732330322265625, _S260 * 16.8996734619140625 + _S257, _s_diff_ctx_1._S74);

// #line 55
    _s_diff_ctx_1._S168 = _S352;


    float2 _S353 = _S348 + p_29 * _S352.y * _S349 * 0.37999999523162842;


    float sumOfValues_17 = sumOfValues_16 + _S352.x * _S349;
    float sumOfWeights_17 = sumOfWeights_16 + _S349;

// #line 62
    float _S354 = s_primal_ctx_lerp_0(_S349, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S169 = _S354;

// #line 62
    float _S355 = s_primal_ctx_sin_0(23415.603515625);

// #line 62
    _s_diff_ctx_1._S170 = _S355;

// #line 62
    float _S356 = s_primal_ctx_cos_0(23415.603515625);

// #line 62
    _s_diff_ctx_1._S171 = _S356;

// #line 48
    float2 p_30 = float2(_S355, _S356);

// #line 55
    float2 _S357 = s_primal_ctx_wavedx_0(_S353, p_30, 23.21441459655761719, _S260 * 18.08265113830566406 + _S257, _s_diff_ctx_1._S75);

// #line 55
    _s_diff_ctx_1._S172 = _S357;


    float2 _S358 = _S353 + p_30 * _S357.y * _S354 * 0.37999999523162842;


    float sumOfValues_18 = sumOfValues_17 + _S357.x * _S354;
    float sumOfWeights_18 = sumOfWeights_17 + _S354;

// #line 62
    float _S359 = s_primal_ctx_lerp_0(_S354, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S173 = _S359;

// #line 62
    float _S360 = s_primal_ctx_sin_0(24648.00390625);

// #line 62
    _s_diff_ctx_1._S174 = _S360;

// #line 62
    float _S361 = s_primal_ctx_cos_0(24648.00390625);

// #line 62
    _s_diff_ctx_1._S175 = _S361;

// #line 48
    float2 p_31 = float2(_S360, _S361);

// #line 55
    float2 _S362 = s_primal_ctx_wavedx_0(_S358, p_31, 27.39300727844238281, _S260 * 19.34843826293945312 + _S257, _s_diff_ctx_1._S76);

// #line 55
    _s_diff_ctx_1._S176 = _S362;


    float2 _S363 = _S358 + p_31 * _S362.y * _S359 * 0.37999999523162842;


    float sumOfValues_19 = sumOfValues_18 + _S362.x * _S359;
    float sumOfWeights_19 = sumOfWeights_18 + _S359;

// #line 62
    float _S364 = s_primal_ctx_lerp_0(_S359, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S177 = _S364;

// #line 62
    float _S365 = s_primal_ctx_sin_0(25880.404296875);

// #line 62
    _s_diff_ctx_1._S178 = _S365;

// #line 62
    float _S366 = s_primal_ctx_cos_0(25880.404296875);

// #line 62
    _s_diff_ctx_1._S179 = _S366;

// #line 48
    float2 p_32 = float2(_S365, _S366);

// #line 55
    float2 _S367 = s_primal_ctx_wavedx_0(_S363, p_32, 32.3237457275390625, _S260 * 20.70282936096191406 + _S257, _s_diff_ctx_1._S77);

// #line 55
    _s_diff_ctx_1._S180 = _S367;


    float2 _S368 = _S363 + p_32 * _S367.y * _S364 * 0.37999999523162842;


    float sumOfValues_20 = sumOfValues_19 + _S367.x * _S364;
    float sumOfWeights_20 = sumOfWeights_19 + _S364;

// #line 62
    float _S369 = s_primal_ctx_lerp_0(_S364, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S181 = _S369;

// #line 62
    float _S370 = s_primal_ctx_sin_0(27112.8046875);

// #line 62
    _s_diff_ctx_1._S182 = _S370;

// #line 62
    float _S371 = s_primal_ctx_cos_0(27112.8046875);

// #line 62
    _s_diff_ctx_1._S183 = _S371;

// #line 48
    float2 p_33 = float2(_S370, _S371);

// #line 55
    float2 _S372 = s_primal_ctx_wavedx_0(_S368, p_33, 38.14201736450195312, _S260 * 22.15202903747558594 + _S257, _s_diff_ctx_1._S78);

// #line 55
    _s_diff_ctx_1._S184 = _S372;


    float2 _S373 = _S368 + p_33 * _S372.y * _S369 * 0.37999999523162842;


    float sumOfValues_21 = sumOfValues_20 + _S372.x * _S369;
    float sumOfWeights_21 = sumOfWeights_20 + _S369;

// #line 62
    float _S374 = s_primal_ctx_lerp_0(_S369, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S185 = _S374;

// #line 62
    float _S375 = s_primal_ctx_sin_0(28345.205078125);

// #line 62
    _s_diff_ctx_1._S186 = _S375;

// #line 62
    float _S376 = s_primal_ctx_cos_0(28345.205078125);

// #line 62
    _s_diff_ctx_1._S187 = _S376;

// #line 48
    float2 p_34 = float2(_S375, _S376);

// #line 55
    float2 _S377 = s_primal_ctx_wavedx_0(_S373, p_34, 45.00757980346679688, _S260 * 23.70267295837402344 + _S257, _s_diff_ctx_1._S79);

// #line 55
    _s_diff_ctx_1._S188 = _S377;


    float2 _S378 = _S373 + p_34 * _S377.y * _S374 * 0.37999999523162842;


    float sumOfValues_22 = sumOfValues_21 + _S377.x * _S374;
    float sumOfWeights_22 = sumOfWeights_21 + _S374;

// #line 62
    float _S379 = s_primal_ctx_lerp_0(_S374, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S189 = _S379;

// #line 62
    float _S380 = s_primal_ctx_sin_0(29577.60546875);

// #line 62
    _s_diff_ctx_1._S190 = _S380;

// #line 62
    float _S381 = s_primal_ctx_cos_0(29577.60546875);

// #line 62
    _s_diff_ctx_1._S191 = _S381;

// #line 48
    float2 p_35 = float2(_S380, _S381);

// #line 55
    float2 _S382 = s_primal_ctx_wavedx_0(_S378, p_35, 53.10894012451171875, _S260 * 25.3618621826171875 + _S257, _s_diff_ctx_1._S80);

// #line 55
    _s_diff_ctx_1._S192 = _S382;


    float2 _S383 = _S378 + p_35 * _S382.y * _S379 * 0.37999999523162842;


    float sumOfValues_23 = sumOfValues_22 + _S382.x * _S379;
    float sumOfWeights_23 = sumOfWeights_22 + _S379;

// #line 62
    float _S384 = s_primal_ctx_lerp_0(_S379, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S193 = _S384;

// #line 62
    float _S385 = s_primal_ctx_sin_0(30810.005859375);

// #line 62
    _s_diff_ctx_1._S194 = _S385;

// #line 62
    float _S386 = s_primal_ctx_cos_0(30810.005859375);

// #line 62
    _s_diff_ctx_1._S195 = _S386;

// #line 48
    float2 p_36 = float2(_S385, _S386);

// #line 55
    float2 _S387 = s_primal_ctx_wavedx_0(_S383, p_36, 62.66854476928710938, _S260 * 27.13719367980957031 + _S257, _s_diff_ctx_1._S81);

// #line 55
    _s_diff_ctx_1._S196 = _S387;


    float2 _S388 = _S383 + p_36 * _S387.y * _S384 * 0.37999999523162842;


    float sumOfValues_24 = sumOfValues_23 + _S387.x * _S384;
    float sumOfWeights_24 = sumOfWeights_23 + _S384;

// #line 62
    float _S389 = s_primal_ctx_lerp_0(_S384, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S197 = _S389;

// #line 62
    float _S390 = s_primal_ctx_sin_0(32042.40625);

// #line 62
    _s_diff_ctx_1._S198 = _S390;

// #line 62
    float _S391 = s_primal_ctx_cos_0(32042.40625);

// #line 62
    _s_diff_ctx_1._S199 = _S391;

// #line 48
    float2 p_37 = float2(_S390, _S391);

// #line 55
    float2 _S392 = s_primal_ctx_wavedx_0(_S388, p_37, 73.948883056640625, _S260 * 29.03679847717285156 + _S257, _s_diff_ctx_1._S82);

// #line 55
    _s_diff_ctx_1._S200 = _S392;


    float2 _S393 = _S388 + p_37 * _S392.y * _S389 * 0.37999999523162842;


    float sumOfValues_25 = sumOfValues_24 + _S392.x * _S389;
    float sumOfWeights_25 = sumOfWeights_24 + _S389;

// #line 62
    float _S394 = s_primal_ctx_lerp_0(_S389, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S201 = _S394;

// #line 62
    float _S395 = s_primal_ctx_sin_0(33274.8046875);

// #line 62
    _s_diff_ctx_1._S202 = _S395;

// #line 62
    float _S396 = s_primal_ctx_cos_0(33274.8046875);

// #line 62
    _s_diff_ctx_1._S203 = _S396;

// #line 48
    float2 p_38 = float2(_S395, _S396);

// #line 55
    float2 _S397 = s_primal_ctx_wavedx_0(_S393, p_38, 87.25968170166015625, _S260 * 31.06937599182128906 + _S257, _s_diff_ctx_1._S83);

// #line 55
    _s_diff_ctx_1._S204 = _S397;


    float2 _S398 = _S393 + p_38 * _S397.y * _S394 * 0.37999999523162842;


    float sumOfValues_26 = sumOfValues_25 + _S397.x * _S394;
    float sumOfWeights_26 = sumOfWeights_25 + _S394;

// #line 62
    float _S399 = s_primal_ctx_lerp_0(_S394, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S205 = _S399;

// #line 62
    float _S400 = s_primal_ctx_sin_0(34507.203125);

// #line 62
    _s_diff_ctx_1._S206 = _S400;

// #line 62
    float _S401 = s_primal_ctx_cos_0(34507.203125);

// #line 62
    _s_diff_ctx_1._S207 = _S401;

// #line 48
    float2 p_39 = float2(_S400, _S401);

// #line 55
    float2 _S402 = s_primal_ctx_wavedx_0(_S398, p_39, 102.96642303466796875, _S260 * 33.244232177734375 + _S257, _s_diff_ctx_1._S84);

// #line 55
    _s_diff_ctx_1._S208 = _S402;


    float2 _S403 = _S398 + p_39 * _S402.y * _S399 * 0.37999999523162842;


    float sumOfValues_27 = sumOfValues_26 + _S402.x * _S399;
    float sumOfWeights_27 = sumOfWeights_26 + _S399;

// #line 62
    float _S404 = s_primal_ctx_lerp_0(_S399, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S209 = _S404;

// #line 62
    float _S405 = s_primal_ctx_sin_0(35739.6015625);

// #line 62
    _s_diff_ctx_1._S210 = _S405;

// #line 62
    float _S406 = s_primal_ctx_cos_0(35739.6015625);

// #line 62
    _s_diff_ctx_1._S211 = _S406;

// #line 48
    float2 p_40 = float2(_S405, _S406);

// #line 55
    float2 _S407 = s_primal_ctx_wavedx_0(_S403, p_40, 121.50037384033203125, _S260 * 35.57133102416992188 + _S257, _s_diff_ctx_1._S85);

// #line 55
    _s_diff_ctx_1._S212 = _S407;


    float2 _S408 = _S403 + p_40 * _S407.y * _S404 * 0.37999999523162842;


    float sumOfValues_28 = sumOfValues_27 + _S407.x * _S404;
    float sumOfWeights_28 = sumOfWeights_27 + _S404;

// #line 62
    float _S409 = s_primal_ctx_lerp_0(_S404, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S213 = _S409;

// #line 62
    float _S410 = s_primal_ctx_sin_0(36972.0);

// #line 62
    _s_diff_ctx_1._S214 = _S410;

// #line 62
    float _S411 = s_primal_ctx_cos_0(36972.0);

// #line 62
    _s_diff_ctx_1._S215 = _S411;

// #line 48
    float2 p_41 = float2(_S410, _S411);

// #line 55
    float2 _S412 = s_primal_ctx_wavedx_0(_S408, p_41, 143.3704376220703125, _S260 * 38.0613250732421875 + _S257, _s_diff_ctx_1._S86);

// #line 55
    _s_diff_ctx_1._S216 = _S412;


    float2 _S413 = _S408 + p_41 * _S412.y * _S409 * 0.37999999523162842;


    float sumOfValues_29 = sumOfValues_28 + _S412.x * _S409;
    float sumOfWeights_29 = sumOfWeights_28 + _S409;

// #line 62
    float _S414 = s_primal_ctx_lerp_0(_S409, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S217 = _S414;

// #line 62
    float _S415 = s_primal_ctx_sin_0(38204.3984375);

// #line 62
    _s_diff_ctx_1._S218 = _S415;

// #line 62
    float _S416 = s_primal_ctx_cos_0(38204.3984375);

// #line 62
    _s_diff_ctx_1._S219 = _S416;

// #line 48
    float2 p_42 = float2(_S415, _S416);

// #line 55
    float2 _S417 = s_primal_ctx_wavedx_0(_S413, p_42, 169.1771087646484375, _S260 * 40.72562026977539062 + _S257, _s_diff_ctx_1._S87);

// #line 55
    _s_diff_ctx_1._S220 = _S417;


    float2 _S418 = _S413 + p_42 * _S417.y * _S414 * 0.37999999523162842;


    float sumOfValues_30 = sumOfValues_29 + _S417.x * _S414;
    float sumOfWeights_30 = sumOfWeights_29 + _S414;

// #line 62
    float _S419 = s_primal_ctx_lerp_0(_S414, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S221 = _S419;

// #line 62
    float _S420 = s_primal_ctx_sin_0(39436.796875);

// #line 62
    _s_diff_ctx_1._S222 = _S420;

// #line 62
    float _S421 = s_primal_ctx_cos_0(39436.796875);

// #line 62
    _s_diff_ctx_1._S223 = _S421;

// #line 48
    float2 p_43 = float2(_S420, _S421);

// #line 55
    float2 _S422 = s_primal_ctx_wavedx_0(_S418, p_43, 199.6289825439453125, _S260 * 43.576416015625 + _S257, _s_diff_ctx_1._S88);

// #line 55
    _s_diff_ctx_1._S224 = _S422;


    float2 _S423 = _S418 + p_43 * _S422.y * _S419 * 0.37999999523162842;


    float sumOfValues_31 = sumOfValues_30 + _S422.x * _S419;
    float sumOfWeights_31 = sumOfWeights_30 + _S419;

// #line 62
    float _S424 = s_primal_ctx_lerp_0(_S419, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S225 = _S424;

// #line 62
    float _S425 = s_primal_ctx_sin_0(40669.1953125);

// #line 62
    _s_diff_ctx_1._S226 = _S425;

// #line 62
    float _S426 = s_primal_ctx_cos_0(40669.1953125);

// #line 62
    _s_diff_ctx_1._S227 = _S426;

// #line 48
    float2 p_44 = float2(_S425, _S426);

// #line 55
    float2 _S427 = s_primal_ctx_wavedx_0(_S423, p_44, 235.56219482421875, _S260 * 46.62676620483398438 + _S257, _s_diff_ctx_1._S89);

// #line 55
    _s_diff_ctx_1._S228 = _S427;


    float2 _S428 = _S423 + p_44 * _S427.y * _S424 * 0.37999999523162842;


    float sumOfValues_32 = sumOfValues_31 + _S427.x * _S424;
    float sumOfWeights_32 = sumOfWeights_31 + _S424;

// #line 62
    float _S429 = s_primal_ctx_lerp_0(_S424, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S229 = _S429;

// #line 62
    float _S430 = s_primal_ctx_sin_0(41901.59375);

// #line 62
    _s_diff_ctx_1._S230 = _S430;

// #line 62
    float _S431 = s_primal_ctx_cos_0(41901.59375);

// #line 62
    _s_diff_ctx_1._S231 = _S431;

// #line 48
    float2 p_45 = float2(_S430, _S431);

// #line 55
    float2 _S432 = s_primal_ctx_wavedx_0(_S428, p_45, 277.96337890625, _S260 * 49.89064407348632812 + _S257, _s_diff_ctx_1._S90);

// #line 55
    _s_diff_ctx_1._S232 = _S432;


    float2 _S433 = _S428 + p_45 * _S432.y * _S429 * 0.37999999523162842;


    float sumOfValues_33 = sumOfValues_32 + _S432.x * _S429;
    float sumOfWeights_33 = sumOfWeights_32 + _S429;

// #line 62
    float _S434 = s_primal_ctx_lerp_0(_S429, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S233 = _S434;

// #line 62
    float _S435 = s_primal_ctx_sin_0(43133.9921875);

// #line 62
    _s_diff_ctx_1._S234 = _S435;

// #line 62
    float _S436 = s_primal_ctx_cos_0(43133.9921875);

// #line 62
    _s_diff_ctx_1._S235 = _S436;

// #line 48
    float2 p_46 = float2(_S435, _S436);

// #line 55
    float2 _S437 = s_primal_ctx_wavedx_0(_S433, p_46, 327.99676513671875, _S260 * 53.38299179077148438 + _S257, _s_diff_ctx_1._S91);

// #line 55
    _s_diff_ctx_1._S236 = _S437;


    float2 _S438 = _S433 + p_46 * _S437.y * _S434 * 0.37999999523162842;


    float sumOfValues_34 = sumOfValues_33 + _S437.x * _S434;
    float sumOfWeights_34 = sumOfWeights_33 + _S434;

// #line 62
    float _S439 = s_primal_ctx_lerp_0(_S434, 0.0, 0.20000000298023224);

// #line 62
    _s_diff_ctx_1._S237 = _S439;

// #line 62
    float _S440 = s_primal_ctx_sin_0(44366.390625);

// #line 62
    _s_diff_ctx_1._S238 = _S440;

// #line 62
    float _S441 = s_primal_ctx_cos_0(44366.390625);

// #line 62
    _s_diff_ctx_1._S239 = _S441;

// #line 55
    float2 _S442 = s_primal_ctx_wavedx_0(_S438, float2(_S440, _S441), 387.036163330078125, _S260 * 57.11980438232421875 + _S257, _s_diff_ctx_1._S92);

// #line 55
    _s_diff_ctx_1._S240 = _S442;

// #line 55
    return (sumOfValues_34 + _S442.x * _S439) / (sumOfWeights_34 + _S439);
}


// #line 1543 "diff.meta.slang"
void s_bwd_prop_cos_0(inout DiffPair_float_0 _S443, float _S444)
{

// #line 1543
    _d_cos_0(_S443, _S444);

// #line 1543
    return;
}


// #line 1543
void s_bwd_prop_exp_0(inout DiffPair_float_0 _S445, float _S446)
{

// #line 1543
    _d_exp_0(_S445, _S446);

// #line 1543
    return;
}


// #line 1543
void s_bwd_prop_sin_0(inout DiffPair_float_0 _S447, float _S448)
{

// #line 1543
    _d_sin_0(_S447, _S448);

// #line 1543
    return;
}


// #line 1543
void s_bwd_prop_dot_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 _S449, inout DiffPair_vectorx3Cfloatx2C2x3E_0 _S450, float _S451)
{

// #line 1543
    _d_dot_0(_S449, _S450, _S451);

// #line 1543
    return;
}


// #line 27 "D:/Programs/SlangU/Assets/Shaders/ocean.slang"
void s_bwd_prop_wavedx_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpposition_2, inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpdirection_1, inout DiffPair_float_0 dpfrequency_1, inout DiffPair_float_0 dptimeshift_1, float2 _s_dOut_0, s_bwd_prop_wavedx_Intermediates_0 _s_diff_ctx_2)
{

// #line 28
    float x_2 = _s_diff_ctx_2._S52 * dpfrequency_1.primal_0 + dptimeshift_1.primal_0;
    float _S452 = _s_diff_ctx_2._S53 - 1.0;

    float s_diff_dx_T_0 = - _s_dOut_0[int(1)];

// #line 30
    float _S453 = _s_diff_ctx_2._S54 * s_diff_dx_T_0;

// #line 30
    float _S454 = _s_diff_ctx_2._S55 * s_diff_dx_T_0;

// #line 30
    DiffPair_float_0 _S455;

// #line 30
    _S455.primal_0 = x_2;

// #line 30
    _S455.differential_0 = 0.0;

// #line 30
    s_bwd_prop_cos_0(_S455, _S453);

// #line 29
    float _S456 = _s_dOut_0[int(0)] + _S454;

// #line 29
    DiffPair_float_0 _S457;

// #line 29
    _S457.primal_0 = _S452;

// #line 29
    _S457.differential_0 = 0.0;

// #line 29
    s_bwd_prop_exp_0(_S457, _S456);

// #line 29
    DiffPair_float_0 _S458;

// #line 29
    _S458.primal_0 = x_2;

// #line 29
    _S458.differential_0 = 0.0;

// #line 29
    s_bwd_prop_sin_0(_S458, _S457.differential_0);

// #line 28
    float _S459 = _S455.differential_0 + _S458.differential_0;

// #line 28
    float _S460 = _s_diff_ctx_2._S52 * _S459;

// #line 28
    float _S461 = dpfrequency_1.primal_0 * _S459;

// #line 28
    float2 _S462 = (float2)0.0;

// #line 28
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S463;

// #line 28
    _S463.primal_0 = dpdirection_1.primal_0;

// #line 28
    _S463.differential_0 = _S462;

// #line 28
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S464;

// #line 28
    _S464.primal_0 = dpposition_2.primal_0;

// #line 28
    _S464.differential_0 = _S462;

// #line 28
    s_bwd_prop_dot_0(_S463, _S464, _S461);

// #line 28
    dptimeshift_1.primal_0 = dptimeshift_1.primal_0;

// #line 28
    dptimeshift_1.differential_0 = _S459;

// #line 28
    dpfrequency_1.primal_0 = dpfrequency_1.primal_0;

// #line 28
    dpfrequency_1.differential_0 = _S460;

// #line 28
    dpdirection_1.primal_0 = dpdirection_1.primal_0;

// #line 28
    dpdirection_1.differential_0 = _S463.differential_0;

// #line 28
    dpposition_2.primal_0 = dpposition_2.primal_0;

// #line 28
    dpposition_2.differential_0 = _S464.differential_0;

// #line 27
    return;
}


// #line 27
void s_bwd_prop_sqrt_0(inout DiffPair_float_0 _S465, float _S466)
{

// #line 27
    _d_sqrt_0(_S465, _S466);

// #line 27
    return;
}


// #line 2077 "diff.meta.slang"
void s_bwd_prop_length_impl_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpx_5, float _s_dOut_1)
{

// #line 2077
    float _S467 = dpx_5.primal_0[int(0)];

// #line 2077
    float _S468 = dpx_5.primal_0[int(1)];

// #line 2084
    DiffPair_float_0 _S469;

// #line 2084
    _S469.primal_0 = _S467 * _S467 + _S468 * _S468;

// #line 2084
    _S469.differential_0 = 0.0;

// #line 2084
    s_bwd_prop_sqrt_0(_S469, _s_dOut_1);

// #line 2084
    float _S470 = dpx_5.primal_0[int(1)] * _S469.differential_0;

// #line 678 "core.meta.slang"
    float _S471 = _S470 + _S470;

// #line 678
    float _S472 = dpx_5.primal_0[int(0)] * _S469.differential_0;

// #line 678
    float _S473 = _S472 + _S472;

// #line 678
    float2 _S474 = (float2)0.0;

// #line 678
    _S474[int(1)] = _S471;

// #line 678
    _S474[int(0)] = _S473;

// #line 678
    dpx_5.primal_0 = dpx_5.primal_0;

// #line 678
    dpx_5.differential_0 = _S474;

// #line 2077 "diff.meta.slang"
    return;
}


// #line 2077
void s_bwd_length_impl_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 _S475, float _S476)
{

// #line 2077
    s_bwd_prop_length_impl_0(_S475, _S476);

// #line 2077
    return;
}


// #line 2077
void s_bwd_prop_length_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 _S477, float _S478)
{

// #line 2104
    s_bwd_length_impl_0(_S477, _S478);

// #line 2104
    return;
}


// #line 37 "D:/Programs/SlangU/Assets/Shaders/ocean.slang"
void s_bwd_prop_getwaves_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 dpposition_3, float _s_dOut_2, s_bwd_prop_getwaves_Intermediates_0 _s_diff_ctx_3)
{

// #line 38
    float _S479 = _s_diff_ctx_3._S93 * 0.10000000149011612;

// #line 48
    float2 p_47 = float2(_s_diff_ctx_3._S94, _s_diff_ctx_3._S95);

// #line 55
    float _S480 = _Time_0.y;

// #line 55
    float _S481 = _S480 * 5.0 + _S479;


    float2 _S482 = dpposition_3.primal_0 + p_47 * _s_diff_ctx_3._S96.y * 0.37999999523162842;

// #line 58
    float2 _S483 = (float2)_s_diff_ctx_3._S97;

// #line 48
    float2 p_48 = float2(_s_diff_ctx_3._S98, _s_diff_ctx_3._S99);

// #line 55
    float _S484 = _S480 * 5.35000038146972656 + _S479;


    float2 _S485 = _S482 + p_48 * _s_diff_ctx_3._S100.y * _s_diff_ctx_3._S97 * 0.37999999523162842;

// #line 58
    float2 _S486 = (float2)_s_diff_ctx_3._S101;

// #line 48
    float2 p_49 = float2(_s_diff_ctx_3._S102, _s_diff_ctx_3._S103);

// #line 55
    float _S487 = _S480 * 5.72450065612792969 + _S479;


    float2 _S488 = _S485 + p_49 * _s_diff_ctx_3._S104.y * _s_diff_ctx_3._S101 * 0.37999999523162842;

// #line 58
    float2 _S489 = (float2)_s_diff_ctx_3._S105;

// #line 48
    float2 p_50 = float2(_s_diff_ctx_3._S106, _s_diff_ctx_3._S107);

// #line 55
    float _S490 = _S480 * 6.12521600723266602 + _S479;


    float2 _S491 = _S488 + p_50 * _s_diff_ctx_3._S108.y * _s_diff_ctx_3._S105 * 0.37999999523162842;

// #line 58
    float2 _S492 = (float2)_s_diff_ctx_3._S109;

// #line 48
    float2 p_51 = float2(_s_diff_ctx_3._S110, _s_diff_ctx_3._S111);

// #line 55
    float _S493 = _S480 * 6.55398130416870117 + _S479;


    float2 _S494 = _S491 + p_51 * _s_diff_ctx_3._S112.y * _s_diff_ctx_3._S109 * 0.37999999523162842;

// #line 58
    float2 _S495 = (float2)_s_diff_ctx_3._S113;

// #line 48
    float2 p_52 = float2(_s_diff_ctx_3._S114, _s_diff_ctx_3._S115);

// #line 55
    float _S496 = _S480 * 7.01276016235351562 + _S479;


    float2 _S497 = _S494 + p_52 * _s_diff_ctx_3._S116.y * _s_diff_ctx_3._S113 * 0.37999999523162842;

// #line 58
    float2 _S498 = (float2)_s_diff_ctx_3._S117;

// #line 48
    float2 p_53 = float2(_s_diff_ctx_3._S118, _s_diff_ctx_3._S119);

// #line 55
    float _S499 = _S480 * 7.50365352630615234 + _S479;


    float2 _S500 = _S497 + p_53 * _s_diff_ctx_3._S120.y * _s_diff_ctx_3._S117 * 0.37999999523162842;

// #line 58
    float2 _S501 = (float2)_s_diff_ctx_3._S121;

// #line 48
    float2 p_54 = float2(_s_diff_ctx_3._S122, _s_diff_ctx_3._S123);

// #line 55
    float _S502 = _S480 * 8.02890968322753906 + _S479;


    float2 _S503 = _S500 + p_54 * _s_diff_ctx_3._S124.y * _s_diff_ctx_3._S121 * 0.37999999523162842;

// #line 58
    float2 _S504 = (float2)_s_diff_ctx_3._S125;

// #line 48
    float2 p_55 = float2(_s_diff_ctx_3._S126, _s_diff_ctx_3._S127);

// #line 55
    float _S505 = _S480 * 8.59093379974365234 + _S479;


    float2 _S506 = _S503 + p_55 * _s_diff_ctx_3._S128.y * _s_diff_ctx_3._S125 * 0.37999999523162842;

// #line 58
    float2 _S507 = (float2)_s_diff_ctx_3._S129;

// #line 48
    float2 p_56 = float2(_s_diff_ctx_3._S130, _s_diff_ctx_3._S131);

// #line 55
    float _S508 = _S480 * 9.19229984283447266 + _S479;


    float2 _S509 = _S506 + p_56 * _s_diff_ctx_3._S132.y * _s_diff_ctx_3._S129 * 0.37999999523162842;

// #line 58
    float2 _S510 = (float2)_s_diff_ctx_3._S133;

// #line 48
    float2 p_57 = float2(_s_diff_ctx_3._S134, _s_diff_ctx_3._S135);

// #line 55
    float _S511 = _S480 * 9.83576107025146484 + _S479;


    float2 _S512 = _S509 + p_57 * _s_diff_ctx_3._S136.y * _s_diff_ctx_3._S133 * 0.37999999523162842;

// #line 58
    float2 _S513 = (float2)_s_diff_ctx_3._S137;

// #line 48
    float2 p_58 = float2(_s_diff_ctx_3._S138, _s_diff_ctx_3._S139);

// #line 55
    float _S514 = _S480 * 10.52426528930664062 + _S479;


    float2 _S515 = _S512 + p_58 * _s_diff_ctx_3._S140.y * _s_diff_ctx_3._S137 * 0.37999999523162842;

// #line 58
    float2 _S516 = (float2)_s_diff_ctx_3._S141;

// #line 48
    float2 p_59 = float2(_s_diff_ctx_3._S142, _s_diff_ctx_3._S143);

// #line 55
    float _S517 = _S480 * 11.26096439361572266 + _S479;


    float2 _S518 = _S515 + p_59 * _s_diff_ctx_3._S144.y * _s_diff_ctx_3._S141 * 0.37999999523162842;

// #line 58
    float2 _S519 = (float2)_s_diff_ctx_3._S145;

// #line 48
    float2 p_60 = float2(_s_diff_ctx_3._S146, _s_diff_ctx_3._S147);

// #line 55
    float _S520 = _S480 * 12.04923248291015625 + _S479;


    float2 _S521 = _S518 + p_60 * _s_diff_ctx_3._S148.y * _s_diff_ctx_3._S145 * 0.37999999523162842;

// #line 58
    float2 _S522 = (float2)_s_diff_ctx_3._S149;

// #line 48
    float2 p_61 = float2(_s_diff_ctx_3._S150, _s_diff_ctx_3._S151);

// #line 55
    float _S523 = _S480 * 12.89267921447753906 + _S479;


    float2 _S524 = _S521 + p_61 * _s_diff_ctx_3._S152.y * _s_diff_ctx_3._S149 * 0.37999999523162842;

// #line 58
    float2 _S525 = (float2)_s_diff_ctx_3._S153;

// #line 48
    float2 p_62 = float2(_s_diff_ctx_3._S154, _s_diff_ctx_3._S155);

// #line 55
    float _S526 = _S480 * 13.79516696929931641 + _S479;


    float2 _S527 = _S524 + p_62 * _s_diff_ctx_3._S156.y * _s_diff_ctx_3._S153 * 0.37999999523162842;

// #line 58
    float2 _S528 = (float2)_s_diff_ctx_3._S157;

// #line 48
    float2 p_63 = float2(_s_diff_ctx_3._S158, _s_diff_ctx_3._S159);

// #line 55
    float _S529 = _S480 * 14.76082897186279297 + _S479;


    float2 _S530 = _S527 + p_63 * _s_diff_ctx_3._S160.y * _s_diff_ctx_3._S157 * 0.37999999523162842;

// #line 58
    float2 _S531 = (float2)_s_diff_ctx_3._S161;

// #line 48
    float2 p_64 = float2(_s_diff_ctx_3._S162, _s_diff_ctx_3._S163);

// #line 55
    float _S532 = _S480 * 15.79408740997314453 + _S479;


    float2 _S533 = _S530 + p_64 * _s_diff_ctx_3._S164.y * _s_diff_ctx_3._S161 * 0.37999999523162842;

// #line 58
    float2 _S534 = (float2)_s_diff_ctx_3._S165;

// #line 48
    float2 p_65 = float2(_s_diff_ctx_3._S166, _s_diff_ctx_3._S167);

// #line 55
    float _S535 = _S480 * 16.8996734619140625 + _S479;


    float2 _S536 = _S533 + p_65 * _s_diff_ctx_3._S168.y * _s_diff_ctx_3._S165 * 0.37999999523162842;

// #line 58
    float2 _S537 = (float2)_s_diff_ctx_3._S169;

// #line 48
    float2 p_66 = float2(_s_diff_ctx_3._S170, _s_diff_ctx_3._S171);

// #line 55
    float _S538 = _S480 * 18.08265113830566406 + _S479;


    float2 _S539 = _S536 + p_66 * _s_diff_ctx_3._S172.y * _s_diff_ctx_3._S169 * 0.37999999523162842;

// #line 58
    float2 _S540 = (float2)_s_diff_ctx_3._S173;

// #line 48
    float2 p_67 = float2(_s_diff_ctx_3._S174, _s_diff_ctx_3._S175);

// #line 55
    float _S541 = _S480 * 19.34843826293945312 + _S479;


    float2 _S542 = _S539 + p_67 * _s_diff_ctx_3._S176.y * _s_diff_ctx_3._S173 * 0.37999999523162842;

// #line 58
    float2 _S543 = (float2)_s_diff_ctx_3._S177;

// #line 48
    float2 p_68 = float2(_s_diff_ctx_3._S178, _s_diff_ctx_3._S179);

// #line 55
    float _S544 = _S480 * 20.70282936096191406 + _S479;


    float2 _S545 = _S542 + p_68 * _s_diff_ctx_3._S180.y * _s_diff_ctx_3._S177 * 0.37999999523162842;

// #line 58
    float2 _S546 = (float2)_s_diff_ctx_3._S181;

// #line 48
    float2 p_69 = float2(_s_diff_ctx_3._S182, _s_diff_ctx_3._S183);

// #line 55
    float _S547 = _S480 * 22.15202903747558594 + _S479;


    float2 _S548 = _S545 + p_69 * _s_diff_ctx_3._S184.y * _s_diff_ctx_3._S181 * 0.37999999523162842;

// #line 58
    float2 _S549 = (float2)_s_diff_ctx_3._S185;

// #line 48
    float2 p_70 = float2(_s_diff_ctx_3._S186, _s_diff_ctx_3._S187);

// #line 55
    float _S550 = _S480 * 23.70267295837402344 + _S479;


    float2 _S551 = _S548 + p_70 * _s_diff_ctx_3._S188.y * _s_diff_ctx_3._S185 * 0.37999999523162842;

// #line 58
    float2 _S552 = (float2)_s_diff_ctx_3._S189;

// #line 48
    float2 p_71 = float2(_s_diff_ctx_3._S190, _s_diff_ctx_3._S191);

// #line 55
    float _S553 = _S480 * 25.3618621826171875 + _S479;


    float2 _S554 = _S551 + p_71 * _s_diff_ctx_3._S192.y * _s_diff_ctx_3._S189 * 0.37999999523162842;

// #line 58
    float2 _S555 = (float2)_s_diff_ctx_3._S193;

// #line 48
    float2 p_72 = float2(_s_diff_ctx_3._S194, _s_diff_ctx_3._S195);

// #line 55
    float _S556 = _S480 * 27.13719367980957031 + _S479;


    float2 _S557 = _S554 + p_72 * _s_diff_ctx_3._S196.y * _s_diff_ctx_3._S193 * 0.37999999523162842;

// #line 58
    float2 _S558 = (float2)_s_diff_ctx_3._S197;

// #line 48
    float2 p_73 = float2(_s_diff_ctx_3._S198, _s_diff_ctx_3._S199);

// #line 55
    float _S559 = _S480 * 29.03679847717285156 + _S479;


    float2 _S560 = _S557 + p_73 * _s_diff_ctx_3._S200.y * _s_diff_ctx_3._S197 * 0.37999999523162842;

// #line 58
    float2 _S561 = (float2)_s_diff_ctx_3._S201;

// #line 48
    float2 p_74 = float2(_s_diff_ctx_3._S202, _s_diff_ctx_3._S203);

// #line 55
    float _S562 = _S480 * 31.06937599182128906 + _S479;


    float2 _S563 = _S560 + p_74 * _s_diff_ctx_3._S204.y * _s_diff_ctx_3._S201 * 0.37999999523162842;

// #line 58
    float2 _S564 = (float2)_s_diff_ctx_3._S205;

// #line 48
    float2 p_75 = float2(_s_diff_ctx_3._S206, _s_diff_ctx_3._S207);

// #line 55
    float _S565 = _S480 * 33.244232177734375 + _S479;


    float2 _S566 = _S563 + p_75 * _s_diff_ctx_3._S208.y * _s_diff_ctx_3._S205 * 0.37999999523162842;

// #line 58
    float2 _S567 = (float2)_s_diff_ctx_3._S209;

// #line 48
    float2 p_76 = float2(_s_diff_ctx_3._S210, _s_diff_ctx_3._S211);

// #line 55
    float _S568 = _S480 * 35.57133102416992188 + _S479;


    float2 _S569 = _S566 + p_76 * _s_diff_ctx_3._S212.y * _s_diff_ctx_3._S209 * 0.37999999523162842;

// #line 58
    float2 _S570 = (float2)_s_diff_ctx_3._S213;

// #line 48
    float2 p_77 = float2(_s_diff_ctx_3._S214, _s_diff_ctx_3._S215);

// #line 55
    float _S571 = _S480 * 38.0613250732421875 + _S479;


    float2 _S572 = _S569 + p_77 * _s_diff_ctx_3._S216.y * _s_diff_ctx_3._S213 * 0.37999999523162842;

// #line 58
    float2 _S573 = (float2)_s_diff_ctx_3._S217;

// #line 48
    float2 p_78 = float2(_s_diff_ctx_3._S218, _s_diff_ctx_3._S219);

// #line 55
    float _S574 = _S480 * 40.72562026977539062 + _S479;


    float2 _S575 = _S572 + p_78 * _s_diff_ctx_3._S220.y * _s_diff_ctx_3._S217 * 0.37999999523162842;

// #line 58
    float2 _S576 = (float2)_s_diff_ctx_3._S221;

// #line 48
    float2 p_79 = float2(_s_diff_ctx_3._S222, _s_diff_ctx_3._S223);

// #line 55
    float _S577 = _S480 * 43.576416015625 + _S479;


    float2 _S578 = _S575 + p_79 * _s_diff_ctx_3._S224.y * _s_diff_ctx_3._S221 * 0.37999999523162842;

// #line 58
    float2 _S579 = (float2)_s_diff_ctx_3._S225;

// #line 48
    float2 p_80 = float2(_s_diff_ctx_3._S226, _s_diff_ctx_3._S227);

// #line 55
    float _S580 = _S480 * 46.62676620483398438 + _S479;


    float2 _S581 = _S578 + p_80 * _s_diff_ctx_3._S228.y * _s_diff_ctx_3._S225 * 0.37999999523162842;

// #line 58
    float2 _S582 = (float2)_s_diff_ctx_3._S229;

// #line 48
    float2 p_81 = float2(_s_diff_ctx_3._S230, _s_diff_ctx_3._S231);

// #line 55
    float _S583 = _S480 * 49.89064407348632812 + _S479;


    float2 _S584 = _S581 + p_81 * _s_diff_ctx_3._S232.y * _s_diff_ctx_3._S229 * 0.37999999523162842;

// #line 58
    float2 _S585 = (float2)_s_diff_ctx_3._S233;

// #line 48
    float2 p_82 = float2(_s_diff_ctx_3._S234, _s_diff_ctx_3._S235);

// #line 55
    float _S586 = _S480 * 53.38299179077148438 + _S479;

// #line 48
    float2 p_83 = float2(_s_diff_ctx_3._S238, _s_diff_ctx_3._S239);

// #line 55
    float _S587 = _S480 * 57.11980438232421875 + _S479;

// #line 62
    float sumOfWeights_35 = 1.0 + _s_diff_ctx_3._S97 + _s_diff_ctx_3._S101 + _s_diff_ctx_3._S105 + _s_diff_ctx_3._S109 + _s_diff_ctx_3._S113 + _s_diff_ctx_3._S117 + _s_diff_ctx_3._S121 + _s_diff_ctx_3._S125 + _s_diff_ctx_3._S129 + _s_diff_ctx_3._S133 + _s_diff_ctx_3._S137 + _s_diff_ctx_3._S141 + _s_diff_ctx_3._S145 + _s_diff_ctx_3._S149 + _s_diff_ctx_3._S153 + _s_diff_ctx_3._S157 + _s_diff_ctx_3._S161 + _s_diff_ctx_3._S165 + _s_diff_ctx_3._S169 + _s_diff_ctx_3._S173 + _s_diff_ctx_3._S177 + _s_diff_ctx_3._S181 + _s_diff_ctx_3._S185 + _s_diff_ctx_3._S189 + _s_diff_ctx_3._S193 + _s_diff_ctx_3._S197 + _s_diff_ctx_3._S201 + _s_diff_ctx_3._S205 + _s_diff_ctx_3._S209 + _s_diff_ctx_3._S213 + _s_diff_ctx_3._S217 + _s_diff_ctx_3._S221 + _s_diff_ctx_3._S225 + _s_diff_ctx_3._S229 + _s_diff_ctx_3._S233 + _s_diff_ctx_3._S237;

// #line 73
    float s_diff_sumOfValues_T_0 = sumOfWeights_35 * (_s_dOut_2 / (sumOfWeights_35 * sumOfWeights_35));

// #line 55
    float2 _S588 = float2(_s_diff_ctx_3._S237 * s_diff_sumOfValues_T_0, 0.0);

// #line 55
    float2 _S589 = (float2)0.0;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S590;

// #line 55
    _S590.primal_0 = _S584 + p_82 * _s_diff_ctx_3._S236.y * _s_diff_ctx_3._S233 * 0.37999999523162842;

// #line 55
    _S590.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S591;

// #line 55
    _S591.primal_0 = p_83;

// #line 55
    _S591.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S592;

// #line 55
    _S592.primal_0 = 387.036163330078125;

// #line 55
    _S592.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S593;

// #line 55
    _S593.primal_0 = _S587;

// #line 55
    _S593.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S590, _S591, _S592, _S593, _S588, _s_diff_ctx_3._S92);


    float2 _S594 = p_82 * (_S585 * ((float2)0.37999999523162842 * _S590.differential_0));

// #line 55
    float2 _S595 = float2(_s_diff_ctx_3._S233 * s_diff_sumOfValues_T_0, _S594[int(0)] + _S594[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S596;

// #line 55
    _S596.primal_0 = _S584;

// #line 55
    _S596.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S597;

// #line 55
    _S597.primal_0 = p_82;

// #line 55
    _S597.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S598;

// #line 55
    _S598.primal_0 = 327.99676513671875;

// #line 55
    _S598.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S599;

// #line 55
    _S599.primal_0 = _S586;

// #line 55
    _S599.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S596, _S597, _S598, _S599, _S595, _s_diff_ctx_3._S91);


    float2 _S600 = _S590.differential_0 + _S596.differential_0;

// #line 58
    float2 _S601 = p_81 * (_S582 * ((float2)0.37999999523162842 * _S600));

// #line 55
    float2 _S602 = float2(_s_diff_ctx_3._S229 * s_diff_sumOfValues_T_0, _S601[int(0)] + _S601[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S603;

// #line 55
    _S603.primal_0 = _S581;

// #line 55
    _S603.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S604;

// #line 55
    _S604.primal_0 = p_81;

// #line 55
    _S604.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S605;

// #line 55
    _S605.primal_0 = 277.96337890625;

// #line 55
    _S605.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S606;

// #line 55
    _S606.primal_0 = _S583;

// #line 55
    _S606.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S603, _S604, _S605, _S606, _S602, _s_diff_ctx_3._S90);


    float2 _S607 = _S600 + _S603.differential_0;

// #line 58
    float2 _S608 = p_80 * (_S579 * ((float2)0.37999999523162842 * _S607));

// #line 55
    float2 _S609 = float2(_s_diff_ctx_3._S225 * s_diff_sumOfValues_T_0, _S608[int(0)] + _S608[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S610;

// #line 55
    _S610.primal_0 = _S578;

// #line 55
    _S610.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S611;

// #line 55
    _S611.primal_0 = p_80;

// #line 55
    _S611.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S612;

// #line 55
    _S612.primal_0 = 235.56219482421875;

// #line 55
    _S612.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S613;

// #line 55
    _S613.primal_0 = _S580;

// #line 55
    _S613.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S610, _S611, _S612, _S613, _S609, _s_diff_ctx_3._S89);


    float2 _S614 = _S607 + _S610.differential_0;

// #line 58
    float2 _S615 = p_79 * (_S576 * ((float2)0.37999999523162842 * _S614));

// #line 55
    float2 _S616 = float2(_s_diff_ctx_3._S221 * s_diff_sumOfValues_T_0, _S615[int(0)] + _S615[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S617;

// #line 55
    _S617.primal_0 = _S575;

// #line 55
    _S617.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S618;

// #line 55
    _S618.primal_0 = p_79;

// #line 55
    _S618.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S619;

// #line 55
    _S619.primal_0 = 199.6289825439453125;

// #line 55
    _S619.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S620;

// #line 55
    _S620.primal_0 = _S577;

// #line 55
    _S620.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S617, _S618, _S619, _S620, _S616, _s_diff_ctx_3._S88);


    float2 _S621 = _S614 + _S617.differential_0;

// #line 58
    float2 _S622 = p_78 * (_S573 * ((float2)0.37999999523162842 * _S621));

// #line 55
    float2 _S623 = float2(_s_diff_ctx_3._S217 * s_diff_sumOfValues_T_0, _S622[int(0)] + _S622[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S624;

// #line 55
    _S624.primal_0 = _S572;

// #line 55
    _S624.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S625;

// #line 55
    _S625.primal_0 = p_78;

// #line 55
    _S625.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S626;

// #line 55
    _S626.primal_0 = 169.1771087646484375;

// #line 55
    _S626.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S627;

// #line 55
    _S627.primal_0 = _S574;

// #line 55
    _S627.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S624, _S625, _S626, _S627, _S623, _s_diff_ctx_3._S87);


    float2 _S628 = _S621 + _S624.differential_0;

// #line 58
    float2 _S629 = p_77 * (_S570 * ((float2)0.37999999523162842 * _S628));

// #line 55
    float2 _S630 = float2(_s_diff_ctx_3._S213 * s_diff_sumOfValues_T_0, _S629[int(0)] + _S629[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S631;

// #line 55
    _S631.primal_0 = _S569;

// #line 55
    _S631.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S632;

// #line 55
    _S632.primal_0 = p_77;

// #line 55
    _S632.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S633;

// #line 55
    _S633.primal_0 = 143.3704376220703125;

// #line 55
    _S633.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S634;

// #line 55
    _S634.primal_0 = _S571;

// #line 55
    _S634.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S631, _S632, _S633, _S634, _S630, _s_diff_ctx_3._S86);


    float2 _S635 = _S628 + _S631.differential_0;

// #line 58
    float2 _S636 = p_76 * (_S567 * ((float2)0.37999999523162842 * _S635));

// #line 55
    float2 _S637 = float2(_s_diff_ctx_3._S209 * s_diff_sumOfValues_T_0, _S636[int(0)] + _S636[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S638;

// #line 55
    _S638.primal_0 = _S566;

// #line 55
    _S638.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S639;

// #line 55
    _S639.primal_0 = p_76;

// #line 55
    _S639.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S640;

// #line 55
    _S640.primal_0 = 121.50037384033203125;

// #line 55
    _S640.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S641;

// #line 55
    _S641.primal_0 = _S568;

// #line 55
    _S641.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S638, _S639, _S640, _S641, _S637, _s_diff_ctx_3._S85);


    float2 _S642 = _S635 + _S638.differential_0;

// #line 58
    float2 _S643 = p_75 * (_S564 * ((float2)0.37999999523162842 * _S642));

// #line 55
    float2 _S644 = float2(_s_diff_ctx_3._S205 * s_diff_sumOfValues_T_0, _S643[int(0)] + _S643[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S645;

// #line 55
    _S645.primal_0 = _S563;

// #line 55
    _S645.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S646;

// #line 55
    _S646.primal_0 = p_75;

// #line 55
    _S646.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S647;

// #line 55
    _S647.primal_0 = 102.96642303466796875;

// #line 55
    _S647.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S648;

// #line 55
    _S648.primal_0 = _S565;

// #line 55
    _S648.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S645, _S646, _S647, _S648, _S644, _s_diff_ctx_3._S84);


    float2 _S649 = _S642 + _S645.differential_0;

// #line 58
    float2 _S650 = p_74 * (_S561 * ((float2)0.37999999523162842 * _S649));

// #line 55
    float2 _S651 = float2(_s_diff_ctx_3._S201 * s_diff_sumOfValues_T_0, _S650[int(0)] + _S650[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S652;

// #line 55
    _S652.primal_0 = _S560;

// #line 55
    _S652.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S653;

// #line 55
    _S653.primal_0 = p_74;

// #line 55
    _S653.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S654;

// #line 55
    _S654.primal_0 = 87.25968170166015625;

// #line 55
    _S654.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S655;

// #line 55
    _S655.primal_0 = _S562;

// #line 55
    _S655.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S652, _S653, _S654, _S655, _S651, _s_diff_ctx_3._S83);


    float2 _S656 = _S649 + _S652.differential_0;

// #line 58
    float2 _S657 = p_73 * (_S558 * ((float2)0.37999999523162842 * _S656));

// #line 55
    float2 _S658 = float2(_s_diff_ctx_3._S197 * s_diff_sumOfValues_T_0, _S657[int(0)] + _S657[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S659;

// #line 55
    _S659.primal_0 = _S557;

// #line 55
    _S659.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S660;

// #line 55
    _S660.primal_0 = p_73;

// #line 55
    _S660.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S661;

// #line 55
    _S661.primal_0 = 73.948883056640625;

// #line 55
    _S661.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S662;

// #line 55
    _S662.primal_0 = _S559;

// #line 55
    _S662.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S659, _S660, _S661, _S662, _S658, _s_diff_ctx_3._S82);


    float2 _S663 = _S656 + _S659.differential_0;

// #line 58
    float2 _S664 = p_72 * (_S555 * ((float2)0.37999999523162842 * _S663));

// #line 55
    float2 _S665 = float2(_s_diff_ctx_3._S193 * s_diff_sumOfValues_T_0, _S664[int(0)] + _S664[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S666;

// #line 55
    _S666.primal_0 = _S554;

// #line 55
    _S666.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S667;

// #line 55
    _S667.primal_0 = p_72;

// #line 55
    _S667.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S668;

// #line 55
    _S668.primal_0 = 62.66854476928710938;

// #line 55
    _S668.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S669;

// #line 55
    _S669.primal_0 = _S556;

// #line 55
    _S669.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S666, _S667, _S668, _S669, _S665, _s_diff_ctx_3._S81);


    float2 _S670 = _S663 + _S666.differential_0;

// #line 58
    float2 _S671 = p_71 * (_S552 * ((float2)0.37999999523162842 * _S670));

// #line 55
    float2 _S672 = float2(_s_diff_ctx_3._S189 * s_diff_sumOfValues_T_0, _S671[int(0)] + _S671[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S673;

// #line 55
    _S673.primal_0 = _S551;

// #line 55
    _S673.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S674;

// #line 55
    _S674.primal_0 = p_71;

// #line 55
    _S674.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S675;

// #line 55
    _S675.primal_0 = 53.10894012451171875;

// #line 55
    _S675.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S676;

// #line 55
    _S676.primal_0 = _S553;

// #line 55
    _S676.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S673, _S674, _S675, _S676, _S672, _s_diff_ctx_3._S80);


    float2 _S677 = _S670 + _S673.differential_0;

// #line 58
    float2 _S678 = p_70 * (_S549 * ((float2)0.37999999523162842 * _S677));

// #line 55
    float2 _S679 = float2(_s_diff_ctx_3._S185 * s_diff_sumOfValues_T_0, _S678[int(0)] + _S678[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S680;

// #line 55
    _S680.primal_0 = _S548;

// #line 55
    _S680.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S681;

// #line 55
    _S681.primal_0 = p_70;

// #line 55
    _S681.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S682;

// #line 55
    _S682.primal_0 = 45.00757980346679688;

// #line 55
    _S682.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S683;

// #line 55
    _S683.primal_0 = _S550;

// #line 55
    _S683.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S680, _S681, _S682, _S683, _S679, _s_diff_ctx_3._S79);


    float2 _S684 = _S677 + _S680.differential_0;

// #line 58
    float2 _S685 = p_69 * (_S546 * ((float2)0.37999999523162842 * _S684));

// #line 55
    float2 _S686 = float2(_s_diff_ctx_3._S181 * s_diff_sumOfValues_T_0, _S685[int(0)] + _S685[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S687;

// #line 55
    _S687.primal_0 = _S545;

// #line 55
    _S687.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S688;

// #line 55
    _S688.primal_0 = p_69;

// #line 55
    _S688.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S689;

// #line 55
    _S689.primal_0 = 38.14201736450195312;

// #line 55
    _S689.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S690;

// #line 55
    _S690.primal_0 = _S547;

// #line 55
    _S690.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S687, _S688, _S689, _S690, _S686, _s_diff_ctx_3._S78);


    float2 _S691 = _S684 + _S687.differential_0;

// #line 58
    float2 _S692 = p_68 * (_S543 * ((float2)0.37999999523162842 * _S691));

// #line 55
    float2 _S693 = float2(_s_diff_ctx_3._S177 * s_diff_sumOfValues_T_0, _S692[int(0)] + _S692[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S694;

// #line 55
    _S694.primal_0 = _S542;

// #line 55
    _S694.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S695;

// #line 55
    _S695.primal_0 = p_68;

// #line 55
    _S695.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S696;

// #line 55
    _S696.primal_0 = 32.3237457275390625;

// #line 55
    _S696.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S697;

// #line 55
    _S697.primal_0 = _S544;

// #line 55
    _S697.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S694, _S695, _S696, _S697, _S693, _s_diff_ctx_3._S77);


    float2 _S698 = _S691 + _S694.differential_0;

// #line 58
    float2 _S699 = p_67 * (_S540 * ((float2)0.37999999523162842 * _S698));

// #line 55
    float2 _S700 = float2(_s_diff_ctx_3._S173 * s_diff_sumOfValues_T_0, _S699[int(0)] + _S699[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S701;

// #line 55
    _S701.primal_0 = _S539;

// #line 55
    _S701.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S702;

// #line 55
    _S702.primal_0 = p_67;

// #line 55
    _S702.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S703;

// #line 55
    _S703.primal_0 = 27.39300727844238281;

// #line 55
    _S703.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S704;

// #line 55
    _S704.primal_0 = _S541;

// #line 55
    _S704.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S701, _S702, _S703, _S704, _S700, _s_diff_ctx_3._S76);


    float2 _S705 = _S698 + _S701.differential_0;

// #line 58
    float2 _S706 = p_66 * (_S537 * ((float2)0.37999999523162842 * _S705));

// #line 55
    float2 _S707 = float2(_s_diff_ctx_3._S169 * s_diff_sumOfValues_T_0, _S706[int(0)] + _S706[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S708;

// #line 55
    _S708.primal_0 = _S536;

// #line 55
    _S708.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S709;

// #line 55
    _S709.primal_0 = p_66;

// #line 55
    _S709.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S710;

// #line 55
    _S710.primal_0 = 23.21441459655761719;

// #line 55
    _S710.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S711;

// #line 55
    _S711.primal_0 = _S538;

// #line 55
    _S711.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S708, _S709, _S710, _S711, _S707, _s_diff_ctx_3._S75);


    float2 _S712 = _S705 + _S708.differential_0;

// #line 58
    float2 _S713 = p_65 * (_S534 * ((float2)0.37999999523162842 * _S712));

// #line 55
    float2 _S714 = float2(_s_diff_ctx_3._S165 * s_diff_sumOfValues_T_0, _S713[int(0)] + _S713[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S715;

// #line 55
    _S715.primal_0 = _S533;

// #line 55
    _S715.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S716;

// #line 55
    _S716.primal_0 = p_65;

// #line 55
    _S716.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S717;

// #line 55
    _S717.primal_0 = 19.6732330322265625;

// #line 55
    _S717.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S718;

// #line 55
    _S718.primal_0 = _S535;

// #line 55
    _S718.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S715, _S716, _S717, _S718, _S714, _s_diff_ctx_3._S74);


    float2 _S719 = _S712 + _S715.differential_0;

// #line 58
    float2 _S720 = p_64 * (_S531 * ((float2)0.37999999523162842 * _S719));

// #line 55
    float2 _S721 = float2(_s_diff_ctx_3._S161 * s_diff_sumOfValues_T_0, _S720[int(0)] + _S720[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S722;

// #line 55
    _S722.primal_0 = _S530;

// #line 55
    _S722.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S723;

// #line 55
    _S723.primal_0 = p_64;

// #line 55
    _S723.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S724;

// #line 55
    _S724.primal_0 = 16.67223167419433594;

// #line 55
    _S724.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S725;

// #line 55
    _S725.primal_0 = _S532;

// #line 55
    _S725.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S722, _S723, _S724, _S725, _S721, _s_diff_ctx_3._S73);


    float2 _S726 = _S719 + _S722.differential_0;

// #line 58
    float2 _S727 = p_63 * (_S528 * ((float2)0.37999999523162842 * _S726));

// #line 55
    float2 _S728 = float2(_s_diff_ctx_3._S157 * s_diff_sumOfValues_T_0, _S727[int(0)] + _S727[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S729;

// #line 55
    _S729.primal_0 = _S527;

// #line 55
    _S729.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S730;

// #line 55
    _S730.primal_0 = p_63;

// #line 55
    _S730.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S731;

// #line 55
    _S731.primal_0 = 14.12901115417480469;

// #line 55
    _S731.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S732;

// #line 55
    _S732.primal_0 = _S529;

// #line 55
    _S732.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S729, _S730, _S731, _S732, _S728, _s_diff_ctx_3._S72);


    float2 _S733 = _S726 + _S729.differential_0;

// #line 58
    float2 _S734 = p_62 * (_S525 * ((float2)0.37999999523162842 * _S733));

// #line 55
    float2 _S735 = float2(_s_diff_ctx_3._S153 * s_diff_sumOfValues_T_0, _S734[int(0)] + _S734[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S736;

// #line 55
    _S736.primal_0 = _S524;

// #line 55
    _S736.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S737;

// #line 55
    _S737.primal_0 = p_62;

// #line 55
    _S737.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S738;

// #line 55
    _S738.primal_0 = 11.97373867034912109;

// #line 55
    _S738.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S739;

// #line 55
    _S739.primal_0 = _S526;

// #line 55
    _S739.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S736, _S737, _S738, _S739, _S735, _s_diff_ctx_3._S71);


    float2 _S740 = _S733 + _S736.differential_0;

// #line 58
    float2 _S741 = p_61 * (_S522 * ((float2)0.37999999523162842 * _S740));

// #line 55
    float2 _S742 = float2(_s_diff_ctx_3._S149 * s_diff_sumOfValues_T_0, _S741[int(0)] + _S741[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S743;

// #line 55
    _S743.primal_0 = _S521;

// #line 55
    _S743.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S744;

// #line 55
    _S744.primal_0 = p_61;

// #line 55
    _S744.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S745;

// #line 55
    _S745.primal_0 = 10.14723682403564453;

// #line 55
    _S745.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S746;

// #line 55
    _S746.primal_0 = _S523;

// #line 55
    _S746.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S743, _S744, _S745, _S746, _S742, _s_diff_ctx_3._S70);


    float2 _S747 = _S740 + _S743.differential_0;

// #line 58
    float2 _S748 = p_60 * (_S519 * ((float2)0.37999999523162842 * _S747));

// #line 55
    float2 _S749 = float2(_s_diff_ctx_3._S145 * s_diff_sumOfValues_T_0, _S748[int(0)] + _S748[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S750;

// #line 55
    _S750.primal_0 = _S518;

// #line 55
    _S750.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S751;

// #line 55
    _S751.primal_0 = p_60;

// #line 55
    _S751.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S752;

// #line 55
    _S752.primal_0 = 8.59935379028320312;

// #line 55
    _S752.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S753;

// #line 55
    _S753.primal_0 = _S520;

// #line 55
    _S753.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S750, _S751, _S752, _S753, _S749, _s_diff_ctx_3._S69);


    float2 _S754 = _S747 + _S750.differential_0;

// #line 58
    float2 _S755 = p_59 * (_S516 * ((float2)0.37999999523162842 * _S754));

// #line 55
    float2 _S756 = float2(_s_diff_ctx_3._S141 * s_diff_sumOfValues_T_0, _S755[int(0)] + _S755[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S757;

// #line 55
    _S757.primal_0 = _S515;

// #line 55
    _S757.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S758;

// #line 55
    _S758.primal_0 = p_59;

// #line 55
    _S758.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S759;

// #line 55
    _S759.primal_0 = 7.28758859634399414;

// #line 55
    _S759.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S760;

// #line 55
    _S760.primal_0 = _S517;

// #line 55
    _S760.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S757, _S758, _S759, _S760, _S756, _s_diff_ctx_3._S68);


    float2 _S761 = _S754 + _S757.differential_0;

// #line 58
    float2 _S762 = p_58 * (_S513 * ((float2)0.37999999523162842 * _S761));

// #line 55
    float2 _S763 = float2(_s_diff_ctx_3._S137 * s_diff_sumOfValues_T_0, _S762[int(0)] + _S762[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S764;

// #line 55
    _S764.primal_0 = _S512;

// #line 55
    _S764.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S765;

// #line 55
    _S765.primal_0 = p_58;

// #line 55
    _S765.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S766;

// #line 55
    _S766.primal_0 = 6.17592287063598633;

// #line 55
    _S766.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S767;

// #line 55
    _S767.primal_0 = _S514;

// #line 55
    _S767.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S764, _S765, _S766, _S767, _S763, _s_diff_ctx_3._S67);


    float2 _S768 = _S761 + _S764.differential_0;

// #line 58
    float2 _S769 = p_57 * (_S510 * ((float2)0.37999999523162842 * _S768));

// #line 55
    float2 _S770 = float2(_s_diff_ctx_3._S133 * s_diff_sumOfValues_T_0, _S769[int(0)] + _S769[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S771;

// #line 55
    _S771.primal_0 = _S509;

// #line 55
    _S771.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S772;

// #line 55
    _S772.primal_0 = p_57;

// #line 55
    _S772.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S773;

// #line 55
    _S773.primal_0 = 5.23383331298828125;

// #line 55
    _S773.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S774;

// #line 55
    _S774.primal_0 = _S511;

// #line 55
    _S774.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S771, _S772, _S773, _S774, _S770, _s_diff_ctx_3._S66);


    float2 _S775 = _S768 + _S771.differential_0;

// #line 58
    float2 _S776 = p_56 * (_S507 * ((float2)0.37999999523162842 * _S775));

// #line 55
    float2 _S777 = float2(_s_diff_ctx_3._S129 * s_diff_sumOfValues_T_0, _S776[int(0)] + _S776[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S778;

// #line 55
    _S778.primal_0 = _S506;

// #line 55
    _S778.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S779;

// #line 55
    _S779.primal_0 = p_56;

// #line 55
    _S779.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S780;

// #line 55
    _S780.primal_0 = 4.43545198440551758;

// #line 55
    _S780.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S781;

// #line 55
    _S781.primal_0 = _S508;

// #line 55
    _S781.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S778, _S779, _S780, _S781, _S777, _s_diff_ctx_3._S65);


    float2 _S782 = _S775 + _S778.differential_0;

// #line 58
    float2 _S783 = p_55 * (_S504 * ((float2)0.37999999523162842 * _S782));

// #line 55
    float2 _S784 = float2(_s_diff_ctx_3._S125 * s_diff_sumOfValues_T_0, _S783[int(0)] + _S783[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S785;

// #line 55
    _S785.primal_0 = _S503;

// #line 55
    _S785.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S786;

// #line 55
    _S786.primal_0 = p_55;

// #line 55
    _S786.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S787;

// #line 55
    _S787.primal_0 = 3.75885796546936035;

// #line 55
    _S787.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S788;

// #line 55
    _S788.primal_0 = _S505;

// #line 55
    _S788.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S785, _S786, _S787, _S788, _S784, _s_diff_ctx_3._S64);


    float2 _S789 = _S782 + _S785.differential_0;

// #line 58
    float2 _S790 = p_54 * (_S501 * ((float2)0.37999999523162842 * _S789));

// #line 55
    float2 _S791 = float2(_s_diff_ctx_3._S121 * s_diff_sumOfValues_T_0, _S790[int(0)] + _S790[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S792;

// #line 55
    _S792.primal_0 = _S500;

// #line 55
    _S792.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S793;

// #line 55
    _S793.primal_0 = p_54;

// #line 55
    _S793.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S794;

// #line 55
    _S794.primal_0 = 3.18547296524047852;

// #line 55
    _S794.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S795;

// #line 55
    _S795.primal_0 = _S502;

// #line 55
    _S795.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S792, _S793, _S794, _S795, _S791, _s_diff_ctx_3._S63);


    float2 _S796 = _S789 + _S792.differential_0;

// #line 58
    float2 _S797 = p_53 * (_S498 * ((float2)0.37999999523162842 * _S796));

// #line 55
    float2 _S798 = float2(_s_diff_ctx_3._S117 * s_diff_sumOfValues_T_0, _S797[int(0)] + _S797[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S799;

// #line 55
    _S799.primal_0 = _S497;

// #line 55
    _S799.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S800;

// #line 55
    _S800.primal_0 = p_53;

// #line 55
    _S800.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S801;

// #line 55
    _S801.primal_0 = 2.69955348968505859;

// #line 55
    _S801.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S802;

// #line 55
    _S802.primal_0 = _S499;

// #line 55
    _S802.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S799, _S800, _S801, _S802, _S798, _s_diff_ctx_3._S62);


    float2 _S803 = _S796 + _S799.differential_0;

// #line 58
    float2 _S804 = p_52 * (_S495 * ((float2)0.37999999523162842 * _S803));

// #line 55
    float2 _S805 = float2(_s_diff_ctx_3._S113 * s_diff_sumOfValues_T_0, _S804[int(0)] + _S804[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S806;

// #line 55
    _S806.primal_0 = _S494;

// #line 55
    _S806.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S807;

// #line 55
    _S807.primal_0 = p_52;

// #line 55
    _S807.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S808;

// #line 55
    _S808.primal_0 = 2.28775739669799805;

// #line 55
    _S808.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S809;

// #line 55
    _S809.primal_0 = _S496;

// #line 55
    _S809.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S806, _S807, _S808, _S809, _S805, _s_diff_ctx_3._S61);


    float2 _S810 = _S803 + _S806.differential_0;

// #line 58
    float2 _S811 = p_51 * (_S492 * ((float2)0.37999999523162842 * _S810));

// #line 55
    float2 _S812 = float2(_s_diff_ctx_3._S109 * s_diff_sumOfValues_T_0, _S811[int(0)] + _S811[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S813;

// #line 55
    _S813.primal_0 = _S491;

// #line 55
    _S813.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S814;

// #line 55
    _S814.primal_0 = p_51;

// #line 55
    _S814.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S815;

// #line 55
    _S815.primal_0 = 1.93877744674682617;

// #line 55
    _S815.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S816;

// #line 55
    _S816.primal_0 = _S493;

// #line 55
    _S816.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S813, _S814, _S815, _S816, _S812, _s_diff_ctx_3._S60);


    float2 _S817 = _S810 + _S813.differential_0;

// #line 58
    float2 _S818 = p_50 * (_S489 * ((float2)0.37999999523162842 * _S817));

// #line 55
    float2 _S819 = float2(_s_diff_ctx_3._S105 * s_diff_sumOfValues_T_0, _S818[int(0)] + _S818[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S820;

// #line 55
    _S820.primal_0 = _S488;

// #line 55
    _S820.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S821;

// #line 55
    _S821.primal_0 = p_50;

// #line 55
    _S821.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S822;

// #line 55
    _S822.primal_0 = 1.64303183555603027;

// #line 55
    _S822.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S823;

// #line 55
    _S823.primal_0 = _S490;

// #line 55
    _S823.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S820, _S821, _S822, _S823, _S819, _s_diff_ctx_3._S59);


    float2 _S824 = _S817 + _S820.differential_0;

// #line 58
    float2 _S825 = p_49 * (_S486 * ((float2)0.37999999523162842 * _S824));

// #line 55
    float2 _S826 = float2(_s_diff_ctx_3._S101 * s_diff_sumOfValues_T_0, _S825[int(0)] + _S825[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S827;

// #line 55
    _S827.primal_0 = _S485;

// #line 55
    _S827.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S828;

// #line 55
    _S828.primal_0 = p_49;

// #line 55
    _S828.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S829;

// #line 55
    _S829.primal_0 = 1.39239990711212158;

// #line 55
    _S829.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S830;

// #line 55
    _S830.primal_0 = _S487;

// #line 55
    _S830.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S827, _S828, _S829, _S830, _S826, _s_diff_ctx_3._S58);


    float2 _S831 = _S824 + _S827.differential_0;

// #line 58
    float2 _S832 = p_48 * (_S483 * ((float2)0.37999999523162842 * _S831));

// #line 55
    float2 _S833 = float2(_s_diff_ctx_3._S97 * s_diff_sumOfValues_T_0, _S832[int(0)] + _S832[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S834;

// #line 55
    _S834.primal_0 = _S482;

// #line 55
    _S834.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S835;

// #line 55
    _S835.primal_0 = p_48;

// #line 55
    _S835.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S836;

// #line 55
    _S836.primal_0 = 1.1799999475479126;

// #line 55
    _S836.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S837;

// #line 55
    _S837.primal_0 = _S484;

// #line 55
    _S837.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S834, _S835, _S836, _S837, _S833, _s_diff_ctx_3._S57);


    float2 _S838 = _S831 + _S834.differential_0;

// #line 58
    float2 _S839 = p_47 * ((float2)0.37999999523162842 * _S838);

// #line 55
    float2 _S840 = float2(s_diff_sumOfValues_T_0, _S839[int(0)] + _S839[int(1)]);

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S841;

// #line 55
    _S841.primal_0 = dpposition_3.primal_0;

// #line 55
    _S841.differential_0 = _S589;

// #line 55
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S842;

// #line 55
    _S842.primal_0 = p_47;

// #line 55
    _S842.differential_0 = _S589;

// #line 55
    DiffPair_float_0 _S843;

// #line 55
    _S843.primal_0 = 1.0;

// #line 55
    _S843.differential_0 = 0.0;

// #line 55
    DiffPair_float_0 _S844;

// #line 55
    _S844.primal_0 = _S481;

// #line 55
    _S844.differential_0 = 0.0;

// #line 55
    s_bwd_prop_wavedx_0(_S841, _S842, _S843, _S844, _S840, _s_diff_ctx_3._S56);

// #line 38
    float _S845 = 0.10000000149011612 * (_S593.differential_0 + _S599.differential_0 + _S606.differential_0 + _S613.differential_0 + _S620.differential_0 + _S627.differential_0 + _S634.differential_0 + _S641.differential_0 + _S648.differential_0 + _S655.differential_0 + _S662.differential_0 + _S669.differential_0 + _S676.differential_0 + _S683.differential_0 + _S690.differential_0 + _S697.differential_0 + _S704.differential_0 + _S711.differential_0 + _S718.differential_0 + _S725.differential_0 + _S732.differential_0 + _S739.differential_0 + _S746.differential_0 + _S753.differential_0 + _S760.differential_0 + _S767.differential_0 + _S774.differential_0 + _S781.differential_0 + _S788.differential_0 + _S795.differential_0 + _S802.differential_0 + _S809.differential_0 + _S816.differential_0 + _S823.differential_0 + _S830.differential_0 + _S837.differential_0 + _S844.differential_0);

// #line 38
    DiffPair_vectorx3Cfloatx2C2x3E_0 _S846;

// #line 38
    _S846.primal_0 = dpposition_3.primal_0;

// #line 38
    _S846.differential_0 = _S589;

// #line 38
    s_bwd_prop_length_0(_S846, _S845);

// #line 38
    float2 _S847 = _S838 + _S841.differential_0 + _S846.differential_0;

// #line 38
    dpposition_3.primal_0 = dpposition_3.primal_0;

// #line 38
    dpposition_3.differential_0 = _S847;

// #line 37
    return;
}


// #line 37
void s_bwd_getwaves_0(inout DiffPair_vectorx3Cfloatx2C2x3E_0 _S848, float _S849)
{

// #line 37
    s_bwd_prop_getwaves_Intermediates_0 _S850;

// #line 37
    float _S851 = s_primal_ctx_getwaves_0(_S848.primal_0, _S850);

// #line 37
    s_bwd_prop_getwaves_0(_S848, _S849, _S850);

// #line 37
    return;
}


// #line 97
float3 normal_1(float2 pos_2, float e_0, float depth_1)
{

// #line 98
    float2 _S852 = (float2)0.0;

// #line 98
    DiffPair_vectorx3Cfloatx2C2x3E_0 diffPos_0;

// #line 98
    diffPos_0.primal_0 = pos_2;

// #line 98
    diffPos_0.differential_0 = _S852;
    s_bwd_getwaves_0(diffPos_0, 1.0);
    return normalize(float3(- diffPos_0.differential_0.x, 1.0, - diffPos_0.differential_0.y));
}


// #line 188
[shader("compute")][numthreads(32, 32, 1)]
void imageMain(uint3 threadId_0 : SV_DispatchThreadID)
{


    uint2 _S853 = threadId_0.xy;

// #line 193
    float3 ray_0 = getRay_0(float2(_S853), U_ScreenSize_0.xy);
    if(ray_0.y >= 0.0)
    {


        result_0[_S853] = float4(aces_tonemap_0((getAtmosphere_0(ray_0) + getSun_0(ray_0)) * 2.0), 1.0);
        return;
    }

// #line 208
    float3 origin_1 = float3(_Time_0.y * 2.0, 1.5, 1.0);


    float3 _S854 = float3(0.0, 1.0, 0.0);

// #line 217
    float dist_0 = raymarchwater_0(origin_1, origin_1 + ray_0 * intersectPlane_0(origin_1, ray_0, float3(0.0, 0.0, 0.0), _S854), origin_1 + ray_0 * intersectPlane_0(origin_1, ray_0, float3(0.0, -1.0, 0.0), _S854), 1.0);
    float3 waterHitPos_0 = origin_1 + ray_0 * dist_0;

// #line 225
    float3 N_0 = lerp(normal_1(waterHitPos_0.xz, 0.00999999977648258, 1.0), _S854, (float3)(0.80000001192092896 * min(1.0, sqrt(dist_0 * 0.00999999977648258) * 1.10000002384185791)));


    float fresnel_0 = 0.03999999910593033 + 0.95999997854232788 * pow(1.0 - max(0.0, dot(- N_0, ray_0)), 5.0);


    float3 _S855 = normalize(reflect(ray_0, N_0));

// #line 231
    float3 R_0 = _S855;
    R_0[int(1)] = abs(_S855.y);

// #line 241
    result_0[_S853] = float4(aces_tonemap_0((fresnel_0 * (getAtmosphere_0(R_0) + getSun_0(R_0)) + float3(0.02930000051856041, 0.0697999969124794, 0.17170000076293945) * 0.10000000149011612 * (0.20000000298023224 + (waterHitPos_0.y + 1.0))) * 2.0), 1.0);
    return;
}

